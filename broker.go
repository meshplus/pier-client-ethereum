// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BrokerABI is the input ABI used to generate the binding from.
const BrokerABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bitxhubID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_appchainID\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_valThreshold\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_adminThreshold\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"throwInterchainEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"result\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"throwReceiptEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"throwReceiptStatus\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"asciiString\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"status\",\"type\":\"int64\"}],\"name\":\"audit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destFullServiceID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"funcCall\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcCb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsCb\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcRb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsRb\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"}],\"name\":\"emitInterchainEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceID\",\"type\":\"string\"}],\"name\":\"genFullServiceID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceID\",\"type\":\"string\"}],\"name\":\"genRemoteFullServiceID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"}],\"name\":\"getAppchainInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDstRollbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInnerMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLocalServiceList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getLocalWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"outServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getOutMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOuterMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"remoteAddr\",\"type\":\"string\"}],\"name\":\"getRSWhiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getReceiptMessage\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoteServiceList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getStartTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destAddr\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"callFunc\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"}],\"name\":\"invokeInterchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"result\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"invokeReceipt\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"broker\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ruleAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"trustRoot\",\"type\":\"bytes\"}],\"name\":\"registerAppchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceID\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"whiteList\",\"type\":\"address[]\"}],\"name\":\"registerRemoteService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_transactionAddr\",\"type\":\"address\"}],\"name\":\"setTransactionAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_address\",\"type\":\"string\"}],\"name\":\"stringToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// BrokerFuncSigs maps the 4-byte function signature to its string representation.
var BrokerFuncSigs = map[string]string{
	"5e57966d": "addressToString(address)",
	"b38ff85f": "audit(address,int64)",
	"f4aa3077": "emitInterchainEvent(string,string,bytes[],string,bytes[],string,bytes[],bool)",
	"32358c6d": "genFullServiceID(string)",
	"c1606f17": "genRemoteFullServiceID(string,string)",
	"32570a46": "getAppchainInfo(string)",
	"3b6bbe4a": "getCallbackMeta()",
	"564b81ef": "getChainID()",
	"ed63513f": "getDstRollbackMeta()",
	"67b9fa3b": "getInnerMeta()",
	"34a55404": "getLocalServiceList()",
	"aeb278c1": "getLocalWhiteList(address)",
	"29793e6e": "getOutMessage(string,uint64)",
	"c20cab50": "getOuterMeta()",
	"42e56ca8": "getRSWhiteList(string)",
	"ca6954da": "getReceiptMessage(string,uint64)",
	"aed18cf1": "getRemoteServiceList()",
	"dffa2be7": "getStartTimeStamp(string)",
	"8129fc1c": "initialize()",
	"a2f6aa32": "invokeInterchain(string,string,uint64,uint64,string,bytes[],uint64,bytes[],bool)",
	"c4a250e3": "invokeReceipt(string,string,uint64,uint64,bytes[],uint64,bytes[])",
	"1aa3a008": "register()",
	"3cc412cd": "registerAppchain(string,string,address,bytes)",
	"19bd2bb2": "registerRemoteService(string,string,address[])",
	"3c2f5f20": "setTransactionAddr(address)",
	"15706fdf": "stringToAddress(string)",
}

// BrokerBin is the compiled bytecode used for deploying new contracts.
var BrokerBin = ""

// DeployBroker deploys a new Ethereum contract, binding an instance of Broker to it.
func DeployBroker(auth *bind.TransactOpts, backend bind.ContractBackend, _bitxhubID string, _appchainID string, _validators []common.Address, _valThreshold uint64, _admins []common.Address, _adminThreshold uint64) (common.Address, *types.Transaction, *Broker, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BrokerBin), backend, _bitxhubID, _appchainID, _validators, _valThreshold, _admins, _adminThreshold)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// Broker is an auto generated Go binding around an Ethereum contract.
type Broker struct {
	BrokerCaller     // Read-only binding to the contract
	BrokerTransactor // Write-only binding to the contract
	BrokerFilterer   // Log filterer for contract events
}

// BrokerCaller is an auto generated read-only Go binding around an Ethereum contract.
type BrokerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BrokerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BrokerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BrokerSession struct {
	Contract     *Broker           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BrokerCallerSession struct {
	Contract *BrokerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// BrokerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BrokerTransactorSession struct {
	Contract     *BrokerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerRaw is an auto generated low-level Go binding around an Ethereum contract.
type BrokerRaw struct {
	Contract *Broker // Generic contract binding to access the raw methods on
}

// BrokerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BrokerCallerRaw struct {
	Contract *BrokerCaller // Generic read-only contract binding to access the raw methods on
}

// BrokerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BrokerTransactorRaw struct {
	Contract *BrokerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBroker creates a new instance of Broker, bound to a specific deployed contract.
func NewBroker(address common.Address, backend bind.ContractBackend) (*Broker, error) {
	contract, err := bindBroker(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// NewBrokerCaller creates a new read-only instance of Broker, bound to a specific deployed contract.
func NewBrokerCaller(address common.Address, caller bind.ContractCaller) (*BrokerCaller, error) {
	contract, err := bindBroker(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerCaller{contract: contract}, nil
}

// NewBrokerTransactor creates a new write-only instance of Broker, bound to a specific deployed contract.
func NewBrokerTransactor(address common.Address, transactor bind.ContractTransactor) (*BrokerTransactor, error) {
	contract, err := bindBroker(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerTransactor{contract: contract}, nil
}

// NewBrokerFilterer creates a new log filterer instance of Broker, bound to a specific deployed contract.
func NewBrokerFilterer(address common.Address, filterer bind.ContractFilterer) (*BrokerFilterer, error) {
	contract, err := bindBroker(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BrokerFilterer{contract: contract}, nil
}

// bindBroker binds a generic wrapper to an already deployed contract.
func bindBroker(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.BrokerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transact(opts, method, params...)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerCaller) AddressToString(opts *bind.CallOpts, account common.Address) (string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "addressToString", account)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerSession) AddressToString(account common.Address) (string, error) {
	return _Broker.Contract.AddressToString(&_Broker.CallOpts, account)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerCallerSession) AddressToString(account common.Address) (string, error) {
	return _Broker.Contract.AddressToString(&_Broker.CallOpts, account)
}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerCaller) GenFullServiceID(opts *bind.CallOpts, serviceID string) (string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "genFullServiceID", serviceID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerSession) GenFullServiceID(serviceID string) (string, error) {
	return _Broker.Contract.GenFullServiceID(&_Broker.CallOpts, serviceID)
}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerCallerSession) GenFullServiceID(serviceID string) (string, error) {
	return _Broker.Contract.GenFullServiceID(&_Broker.CallOpts, serviceID)
}

// GenRemoteFullServiceID is a free data retrieval call binding the contract method 0xc1606f17.
//
// Solidity: function genRemoteFullServiceID(string chainID, string serviceID) view returns(string)
func (_Broker *BrokerCaller) GenRemoteFullServiceID(opts *bind.CallOpts, chainID string, serviceID string) (string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "genRemoteFullServiceID", chainID, serviceID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GenRemoteFullServiceID is a free data retrieval call binding the contract method 0xc1606f17.
//
// Solidity: function genRemoteFullServiceID(string chainID, string serviceID) view returns(string)
func (_Broker *BrokerSession) GenRemoteFullServiceID(chainID string, serviceID string) (string, error) {
	return _Broker.Contract.GenRemoteFullServiceID(&_Broker.CallOpts, chainID, serviceID)
}

// GenRemoteFullServiceID is a free data retrieval call binding the contract method 0xc1606f17.
//
// Solidity: function genRemoteFullServiceID(string chainID, string serviceID) view returns(string)
func (_Broker *BrokerCallerSession) GenRemoteFullServiceID(chainID string, serviceID string) (string, error) {
	return _Broker.Contract.GenRemoteFullServiceID(&_Broker.CallOpts, chainID, serviceID)
}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Broker *BrokerCaller) GetAppchainInfo(opts *bind.CallOpts, chainID string) (string, []byte, common.Address, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getAppchainInfo", chainID)

	if err != nil {
		return *new(string), *new([]byte), *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	out2 := *abi.ConvertType(out[2], new(common.Address)).(*common.Address)

	return out0, out1, out2, err

}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Broker *BrokerSession) GetAppchainInfo(chainID string) (string, []byte, common.Address, error) {
	return _Broker.Contract.GetAppchainInfo(&_Broker.CallOpts, chainID)
}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Broker *BrokerCallerSession) GetAppchainInfo(chainID string) (string, []byte, common.Address, error) {
	return _Broker.Contract.GetAppchainInfo(&_Broker.CallOpts, chainID)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetCallbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getCallbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCaller) GetChainID(opts *bind.CallOpts) (string, string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getChainID")

	if err != nil {
		return *new(string), *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)

	return out0, out1, err

}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCallerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetDstRollbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getDstRollbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetInnerMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getInnerMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerCaller) GetLocalServiceList(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getLocalServiceList")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerSession) GetLocalServiceList() ([]string, error) {
	return _Broker.Contract.GetLocalServiceList(&_Broker.CallOpts)
}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerCallerSession) GetLocalServiceList() ([]string, error) {
	return _Broker.Contract.GetLocalServiceList(&_Broker.CallOpts)
}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerCaller) GetLocalWhiteList(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getLocalWhiteList", addr)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerSession) GetLocalWhiteList(addr common.Address) (bool, error) {
	return _Broker.Contract.GetLocalWhiteList(&_Broker.CallOpts, addr)
}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerCallerSession) GetLocalWhiteList(addr common.Address) (bool, error) {
	return _Broker.Contract.GetLocalWhiteList(&_Broker.CallOpts, addr)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool)
func (_Broker *BrokerCaller) GetOutMessage(opts *bind.CallOpts, outServicePair string, idx uint64) (string, [][]byte, bool, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOutMessage", outServicePair, idx)

	if err != nil {
		return *new(string), *new([][]byte), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)

	return out0, out1, out2, err

}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool)
func (_Broker *BrokerSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool)
func (_Broker *BrokerCallerSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetOuterMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOuterMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Broker *BrokerCaller) GetRSWhiteList(opts *bind.CallOpts, remoteAddr string) ([]common.Address, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getRSWhiteList", remoteAddr)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Broker *BrokerSession) GetRSWhiteList(remoteAddr string) ([]common.Address, error) {
	return _Broker.Contract.GetRSWhiteList(&_Broker.CallOpts, remoteAddr)
}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Broker *BrokerCallerSession) GetRSWhiteList(remoteAddr string) ([]common.Address, error) {
	return _Broker.Contract.GetRSWhiteList(&_Broker.CallOpts, remoteAddr)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[], uint64, bool)
func (_Broker *BrokerCaller) GetReceiptMessage(opts *bind.CallOpts, inServicePair string, idx uint64) ([][]byte, uint64, bool, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getReceiptMessage", inServicePair, idx)

	if err != nil {
		return *new([][]byte), *new(uint64), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new([][]byte)).(*[][]byte)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)

	return out0, out1, out2, err

}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[], uint64, bool)
func (_Broker *BrokerSession) GetReceiptMessage(inServicePair string, idx uint64) ([][]byte, uint64, bool, error) {
	return _Broker.Contract.GetReceiptMessage(&_Broker.CallOpts, inServicePair, idx)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[], uint64, bool)
func (_Broker *BrokerCallerSession) GetReceiptMessage(inServicePair string, idx uint64) ([][]byte, uint64, bool, error) {
	return _Broker.Contract.GetReceiptMessage(&_Broker.CallOpts, inServicePair, idx)
}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Broker *BrokerCaller) GetRemoteServiceList(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getRemoteServiceList")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Broker *BrokerSession) GetRemoteServiceList() ([]string, error) {
	return _Broker.Contract.GetRemoteServiceList(&_Broker.CallOpts)
}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Broker *BrokerCallerSession) GetRemoteServiceList() ([]string, error) {
	return _Broker.Contract.GetRemoteServiceList(&_Broker.CallOpts)
}

// GetStartTimeStamp is a free data retrieval call binding the contract method 0xdffa2be7.
//
// Solidity: function getStartTimeStamp(string id) view returns(uint256)
func (_Broker *BrokerCaller) GetStartTimeStamp(opts *bind.CallOpts, id string) (*big.Int, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getStartTimeStamp", id)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetStartTimeStamp is a free data retrieval call binding the contract method 0xdffa2be7.
//
// Solidity: function getStartTimeStamp(string id) view returns(uint256)
func (_Broker *BrokerSession) GetStartTimeStamp(id string) (*big.Int, error) {
	return _Broker.Contract.GetStartTimeStamp(&_Broker.CallOpts, id)
}

// GetStartTimeStamp is a free data retrieval call binding the contract method 0xdffa2be7.
//
// Solidity: function getStartTimeStamp(string id) view returns(uint256)
func (_Broker *BrokerCallerSession) GetStartTimeStamp(id string) (*big.Int, error) {
	return _Broker.Contract.GetStartTimeStamp(&_Broker.CallOpts, id)
}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_Broker *BrokerCaller) StringToAddress(opts *bind.CallOpts, _address string) (common.Address, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "stringToAddress", _address)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_Broker *BrokerSession) StringToAddress(_address string) (common.Address, error) {
	return _Broker.Contract.StringToAddress(&_Broker.CallOpts, _address)
}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_Broker *BrokerCallerSession) StringToAddress(_address string) (common.Address, error) {
	return _Broker.Contract.StringToAddress(&_Broker.CallOpts, _address)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactor) Audit(opts *bind.TransactOpts, addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "audit", addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactorSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xf4aa3077.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt) returns()
func (_Broker *BrokerTransactor) EmitInterchainEvent(opts *bind.TransactOpts, destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "emitInterchainEvent", destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xf4aa3077.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt) returns()
func (_Broker *BrokerSession) EmitInterchainEvent(destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xf4aa3077.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt) returns()
func (_Broker *BrokerTransactorSession) EmitInterchainEvent(destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactorSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactor) InvokeInterchain(opts *bind.TransactOpts, srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeInterchain", srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerSession) InvokeInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactorSession) InvokeInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0xc4a250e3.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[] result, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactor) InvokeReceipt(opts *bind.TransactOpts, srcAddr string, dstFullID string, index uint64, typ uint64, result [][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeReceipt", srcAddr, dstFullID, index, typ, result, txStatus, signatures)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0xc4a250e3.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[] result, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerSession) InvokeReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, result [][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, result, txStatus, signatures)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0xc4a250e3.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[] result, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactorSession) InvokeReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, result [][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, result, txStatus, signatures)
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_Broker *BrokerTransactor) Register(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "register")
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_Broker *BrokerSession) Register() (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts)
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_Broker *BrokerTransactorSession) Register() (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Broker *BrokerTransactor) RegisterAppchain(opts *bind.TransactOpts, chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "registerAppchain", chainID, broker, ruleAddr, trustRoot)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Broker *BrokerSession) RegisterAppchain(chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Broker.Contract.RegisterAppchain(&_Broker.TransactOpts, chainID, broker, ruleAddr, trustRoot)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Broker *BrokerTransactorSession) RegisterAppchain(chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Broker.Contract.RegisterAppchain(&_Broker.TransactOpts, chainID, broker, ruleAddr, trustRoot)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Broker *BrokerTransactor) RegisterRemoteService(opts *bind.TransactOpts, chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "registerRemoteService", chainID, serviceID, whiteList)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Broker *BrokerSession) RegisterRemoteService(chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Broker.Contract.RegisterRemoteService(&_Broker.TransactOpts, chainID, serviceID, whiteList)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Broker *BrokerTransactorSession) RegisterRemoteService(chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Broker.Contract.RegisterRemoteService(&_Broker.TransactOpts, chainID, serviceID, whiteList)
}

// SetTransactionAddr is a paid mutator transaction binding the contract method 0x3c2f5f20.
//
// Solidity: function setTransactionAddr(address _transactionAddr) returns()
func (_Broker *BrokerTransactor) SetTransactionAddr(opts *bind.TransactOpts, _transactionAddr common.Address) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "setTransactionAddr", _transactionAddr)
}

// SetTransactionAddr is a paid mutator transaction binding the contract method 0x3c2f5f20.
//
// Solidity: function setTransactionAddr(address _transactionAddr) returns()
func (_Broker *BrokerSession) SetTransactionAddr(_transactionAddr common.Address) (*types.Transaction, error) {
	return _Broker.Contract.SetTransactionAddr(&_Broker.TransactOpts, _transactionAddr)
}

// SetTransactionAddr is a paid mutator transaction binding the contract method 0x3c2f5f20.
//
// Solidity: function setTransactionAddr(address _transactionAddr) returns()
func (_Broker *BrokerTransactorSession) SetTransactionAddr(_transactionAddr common.Address) (*types.Transaction, error) {
	return _Broker.Contract.SetTransactionAddr(&_Broker.TransactOpts, _transactionAddr)
}

// BrokerThrowInterchainEventIterator is returned from FilterThrowInterchainEvent and is used to iterate over the raw logs and unpacked data for ThrowInterchainEvent events raised by the Broker contract.
type BrokerThrowInterchainEventIterator struct {
	Event *BrokerThrowInterchainEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowInterchainEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowInterchainEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowInterchainEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowInterchainEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowInterchainEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowInterchainEvent represents a ThrowInterchainEvent event raised by the Broker contract.
type BrokerThrowInterchainEvent struct {
	Index     uint64
	DstFullID string
	SrcFullID string
	Func      string
	Args      [][]byte
	Hash      [32]byte
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterThrowInterchainEvent is a free log retrieval operation binding the contract event 0x709f2860ba85ce973413f9ae5240df255cb8abe488e609da35106f143e2cdb49.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash)
func (_Broker *BrokerFilterer) FilterThrowInterchainEvent(opts *bind.FilterOpts) (*BrokerThrowInterchainEventIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwInterchainEvent")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowInterchainEventIterator{contract: _Broker.contract, event: "throwInterchainEvent", logs: logs, sub: sub}, nil
}

// WatchThrowInterchainEvent is a free log subscription operation binding the contract event 0x709f2860ba85ce973413f9ae5240df255cb8abe488e609da35106f143e2cdb49.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash)
func (_Broker *BrokerFilterer) WatchThrowInterchainEvent(opts *bind.WatchOpts, sink chan<- *BrokerThrowInterchainEvent) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwInterchainEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowInterchainEvent)
				if err := _Broker.contract.UnpackLog(event, "throwInterchainEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowInterchainEvent is a log parse operation binding the contract event 0x709f2860ba85ce973413f9ae5240df255cb8abe488e609da35106f143e2cdb49.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash)
func (_Broker *BrokerFilterer) ParseThrowInterchainEvent(log types.Log) (*BrokerThrowInterchainEvent, error) {
	event := new(BrokerThrowInterchainEvent)
	if err := _Broker.contract.UnpackLog(event, "throwInterchainEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BrokerThrowReceiptEventIterator is returned from FilterThrowReceiptEvent and is used to iterate over the raw logs and unpacked data for ThrowReceiptEvent events raised by the Broker contract.
type BrokerThrowReceiptEventIterator struct {
	Event *BrokerThrowReceiptEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowReceiptEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowReceiptEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowReceiptEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowReceiptEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowReceiptEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowReceiptEvent represents a ThrowReceiptEvent event raised by the Broker contract.
type BrokerThrowReceiptEvent struct {
	Index     uint64
	DstFullID string
	SrcFullID string
	Typ       uint64
	Status    bool
	Result    [][]byte
	Hash      [32]byte
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterThrowReceiptEvent is a free log retrieval operation binding the contract event 0xb937bccf7e091ff2fcaca3d0c1b630690aef46162e500478b6709ce9732042e5.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bool status, bytes[] result, bytes32 hash)
func (_Broker *BrokerFilterer) FilterThrowReceiptEvent(opts *bind.FilterOpts) (*BrokerThrowReceiptEventIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwReceiptEvent")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowReceiptEventIterator{contract: _Broker.contract, event: "throwReceiptEvent", logs: logs, sub: sub}, nil
}

// WatchThrowReceiptEvent is a free log subscription operation binding the contract event 0xb937bccf7e091ff2fcaca3d0c1b630690aef46162e500478b6709ce9732042e5.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bool status, bytes[] result, bytes32 hash)
func (_Broker *BrokerFilterer) WatchThrowReceiptEvent(opts *bind.WatchOpts, sink chan<- *BrokerThrowReceiptEvent) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwReceiptEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowReceiptEvent)
				if err := _Broker.contract.UnpackLog(event, "throwReceiptEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowReceiptEvent is a log parse operation binding the contract event 0xb937bccf7e091ff2fcaca3d0c1b630690aef46162e500478b6709ce9732042e5.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bool status, bytes[] result, bytes32 hash)
func (_Broker *BrokerFilterer) ParseThrowReceiptEvent(log types.Log) (*BrokerThrowReceiptEvent, error) {
	event := new(BrokerThrowReceiptEvent)
	if err := _Broker.contract.UnpackLog(event, "throwReceiptEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BrokerThrowReceiptStatusIterator is returned from FilterThrowReceiptStatus and is used to iterate over the raw logs and unpacked data for ThrowReceiptStatus events raised by the Broker contract.
type BrokerThrowReceiptStatusIterator struct {
	Event *BrokerThrowReceiptStatus // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowReceiptStatusIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowReceiptStatus)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowReceiptStatus)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowReceiptStatusIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowReceiptStatusIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowReceiptStatus represents a ThrowReceiptStatus event raised by the Broker contract.
type BrokerThrowReceiptStatus struct {
	Arg0 bool
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterThrowReceiptStatus is a free log retrieval operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) FilterThrowReceiptStatus(opts *bind.FilterOpts) (*BrokerThrowReceiptStatusIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwReceiptStatus")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowReceiptStatusIterator{contract: _Broker.contract, event: "throwReceiptStatus", logs: logs, sub: sub}, nil
}

// WatchThrowReceiptStatus is a free log subscription operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) WatchThrowReceiptStatus(opts *bind.WatchOpts, sink chan<- *BrokerThrowReceiptStatus) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwReceiptStatus")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowReceiptStatus)
				if err := _Broker.contract.UnpackLog(event, "throwReceiptStatus", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowReceiptStatus is a log parse operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) ParseThrowReceiptStatus(log types.Log) (*BrokerThrowReceiptStatus, error) {
	event := new(BrokerThrowReceiptStatus)
	if err := _Broker.contract.UnpackLog(event, "throwReceiptStatus", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TransactionABI is the input ABI used to generate the binding from.
const TransactionABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"endTransactionFail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"endTransactionRollback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"endTransactionSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"genIBTPid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"}],\"name\":\"getAppchainInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"remoteAddr\",\"type\":\"string\"}],\"name\":\"getRSWhiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemoteServiceList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"broker\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ruleAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"trustRoot\",\"type\":\"bytes\"}],\"name\":\"registerAppchain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"chainID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"serviceID\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"whiteList\",\"type\":\"address[]\"}],\"name\":\"registerRemoteService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"rollbackTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"startTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// TransactionFuncSigs maps the 4-byte function signature to its string representation.
var TransactionFuncSigs = map[string]string{
	"b8fc8faa": "endTransactionFail(string,string,uint64)",
	"e7c32ac8": "endTransactionRollback(string,string,uint64)",
	"c804af21": "endTransactionSuccess(string,string,uint64)",
	"a4e40536": "genIBTPid(string,string,uint64)",
	"32570a46": "getAppchainInfo(string)",
	"42e56ca8": "getRSWhiteList(string)",
	"aed18cf1": "getRemoteServiceList()",
	"8129fc1c": "initialize()",
	"3cc412cd": "registerAppchain(string,string,address,bytes)",
	"19bd2bb2": "registerRemoteService(string,string,address[])",
	"23329285": "rollbackTransaction(string,string,uint64)",
	"b98ba486": "startTransaction(string,string,uint64)",
}

// Transaction is an auto generated Go binding around an Ethereum contract.
type Transaction struct {
	TransactionCaller     // Read-only binding to the contract
	TransactionTransactor // Write-only binding to the contract
	TransactionFilterer   // Log filterer for contract events
}

// TransactionCaller is an auto generated read-only Go binding around an Ethereum contract.
type TransactionCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactionTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TransactionTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactionFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TransactionFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactionSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TransactionSession struct {
	Contract     *Transaction      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TransactionCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TransactionCallerSession struct {
	Contract *TransactionCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// TransactionTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TransactionTransactorSession struct {
	Contract     *TransactionTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// TransactionRaw is an auto generated low-level Go binding around an Ethereum contract.
type TransactionRaw struct {
	Contract *Transaction // Generic contract binding to access the raw methods on
}

// TransactionCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TransactionCallerRaw struct {
	Contract *TransactionCaller // Generic read-only contract binding to access the raw methods on
}

// TransactionTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TransactionTransactorRaw struct {
	Contract *TransactionTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTransaction creates a new instance of Transaction, bound to a specific deployed contract.
func NewTransaction(address common.Address, backend bind.ContractBackend) (*Transaction, error) {
	contract, err := bindTransaction(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Transaction{TransactionCaller: TransactionCaller{contract: contract}, TransactionTransactor: TransactionTransactor{contract: contract}, TransactionFilterer: TransactionFilterer{contract: contract}}, nil
}

// NewTransactionCaller creates a new read-only instance of Transaction, bound to a specific deployed contract.
func NewTransactionCaller(address common.Address, caller bind.ContractCaller) (*TransactionCaller, error) {
	contract, err := bindTransaction(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TransactionCaller{contract: contract}, nil
}

// NewTransactionTransactor creates a new write-only instance of Transaction, bound to a specific deployed contract.
func NewTransactionTransactor(address common.Address, transactor bind.ContractTransactor) (*TransactionTransactor, error) {
	contract, err := bindTransaction(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TransactionTransactor{contract: contract}, nil
}

// NewTransactionFilterer creates a new log filterer instance of Transaction, bound to a specific deployed contract.
func NewTransactionFilterer(address common.Address, filterer bind.ContractFilterer) (*TransactionFilterer, error) {
	contract, err := bindTransaction(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TransactionFilterer{contract: contract}, nil
}

// bindTransaction binds a generic wrapper to an already deployed contract.
func bindTransaction(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TransactionABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Transaction *TransactionRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Transaction.Contract.TransactionCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Transaction *TransactionRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Transaction.Contract.TransactionTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Transaction *TransactionRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Transaction.Contract.TransactionTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Transaction *TransactionCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Transaction.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Transaction *TransactionTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Transaction.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Transaction *TransactionTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Transaction.Contract.contract.Transact(opts, method, params...)
}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Transaction *TransactionCaller) GetAppchainInfo(opts *bind.CallOpts, chainID string) (string, []byte, common.Address, error) {
	var out []interface{}
	err := _Transaction.contract.Call(opts, &out, "getAppchainInfo", chainID)

	if err != nil {
		return *new(string), *new([]byte), *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([]byte)).(*[]byte)
	out2 := *abi.ConvertType(out[2], new(common.Address)).(*common.Address)

	return out0, out1, out2, err

}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Transaction *TransactionSession) GetAppchainInfo(chainID string) (string, []byte, common.Address, error) {
	return _Transaction.Contract.GetAppchainInfo(&_Transaction.CallOpts, chainID)
}

// GetAppchainInfo is a free data retrieval call binding the contract method 0x32570a46.
//
// Solidity: function getAppchainInfo(string chainID) view returns(string, bytes, address)
func (_Transaction *TransactionCallerSession) GetAppchainInfo(chainID string) (string, []byte, common.Address, error) {
	return _Transaction.Contract.GetAppchainInfo(&_Transaction.CallOpts, chainID)
}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Transaction *TransactionCaller) GetRSWhiteList(opts *bind.CallOpts, remoteAddr string) ([]common.Address, error) {
	var out []interface{}
	err := _Transaction.contract.Call(opts, &out, "getRSWhiteList", remoteAddr)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Transaction *TransactionSession) GetRSWhiteList(remoteAddr string) ([]common.Address, error) {
	return _Transaction.Contract.GetRSWhiteList(&_Transaction.CallOpts, remoteAddr)
}

// GetRSWhiteList is a free data retrieval call binding the contract method 0x42e56ca8.
//
// Solidity: function getRSWhiteList(string remoteAddr) view returns(address[])
func (_Transaction *TransactionCallerSession) GetRSWhiteList(remoteAddr string) ([]common.Address, error) {
	return _Transaction.Contract.GetRSWhiteList(&_Transaction.CallOpts, remoteAddr)
}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Transaction *TransactionCaller) GetRemoteServiceList(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _Transaction.contract.Call(opts, &out, "getRemoteServiceList")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Transaction *TransactionSession) GetRemoteServiceList() ([]string, error) {
	return _Transaction.Contract.GetRemoteServiceList(&_Transaction.CallOpts)
}

// GetRemoteServiceList is a free data retrieval call binding the contract method 0xaed18cf1.
//
// Solidity: function getRemoteServiceList() view returns(string[])
func (_Transaction *TransactionCallerSession) GetRemoteServiceList() ([]string, error) {
	return _Transaction.Contract.GetRemoteServiceList(&_Transaction.CallOpts)
}

// EndTransactionFail is a paid mutator transaction binding the contract method 0xb8fc8faa.
//
// Solidity: function endTransactionFail(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactor) EndTransactionFail(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "endTransactionFail", from, to, index)
}

// EndTransactionFail is a paid mutator transaction binding the contract method 0xb8fc8faa.
//
// Solidity: function endTransactionFail(string from, string to, uint64 index) returns()
func (_Transaction *TransactionSession) EndTransactionFail(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionFail(&_Transaction.TransactOpts, from, to, index)
}

// EndTransactionFail is a paid mutator transaction binding the contract method 0xb8fc8faa.
//
// Solidity: function endTransactionFail(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactorSession) EndTransactionFail(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionFail(&_Transaction.TransactOpts, from, to, index)
}

// EndTransactionRollback is a paid mutator transaction binding the contract method 0xe7c32ac8.
//
// Solidity: function endTransactionRollback(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactor) EndTransactionRollback(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "endTransactionRollback", from, to, index)
}

// EndTransactionRollback is a paid mutator transaction binding the contract method 0xe7c32ac8.
//
// Solidity: function endTransactionRollback(string from, string to, uint64 index) returns()
func (_Transaction *TransactionSession) EndTransactionRollback(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionRollback(&_Transaction.TransactOpts, from, to, index)
}

// EndTransactionRollback is a paid mutator transaction binding the contract method 0xe7c32ac8.
//
// Solidity: function endTransactionRollback(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactorSession) EndTransactionRollback(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionRollback(&_Transaction.TransactOpts, from, to, index)
}

// EndTransactionSuccess is a paid mutator transaction binding the contract method 0xc804af21.
//
// Solidity: function endTransactionSuccess(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactor) EndTransactionSuccess(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "endTransactionSuccess", from, to, index)
}

// EndTransactionSuccess is a paid mutator transaction binding the contract method 0xc804af21.
//
// Solidity: function endTransactionSuccess(string from, string to, uint64 index) returns()
func (_Transaction *TransactionSession) EndTransactionSuccess(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionSuccess(&_Transaction.TransactOpts, from, to, index)
}

// EndTransactionSuccess is a paid mutator transaction binding the contract method 0xc804af21.
//
// Solidity: function endTransactionSuccess(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactorSession) EndTransactionSuccess(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.EndTransactionSuccess(&_Transaction.TransactOpts, from, to, index)
}

// GenIBTPid is a paid mutator transaction binding the contract method 0xa4e40536.
//
// Solidity: function genIBTPid(string from, string to, uint64 index) returns(string)
func (_Transaction *TransactionTransactor) GenIBTPid(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "genIBTPid", from, to, index)
}

// GenIBTPid is a paid mutator transaction binding the contract method 0xa4e40536.
//
// Solidity: function genIBTPid(string from, string to, uint64 index) returns(string)
func (_Transaction *TransactionSession) GenIBTPid(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.GenIBTPid(&_Transaction.TransactOpts, from, to, index)
}

// GenIBTPid is a paid mutator transaction binding the contract method 0xa4e40536.
//
// Solidity: function genIBTPid(string from, string to, uint64 index) returns(string)
func (_Transaction *TransactionTransactorSession) GenIBTPid(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.GenIBTPid(&_Transaction.TransactOpts, from, to, index)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Transaction *TransactionTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Transaction *TransactionSession) Initialize() (*types.Transaction, error) {
	return _Transaction.Contract.Initialize(&_Transaction.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Transaction *TransactionTransactorSession) Initialize() (*types.Transaction, error) {
	return _Transaction.Contract.Initialize(&_Transaction.TransactOpts)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Transaction *TransactionTransactor) RegisterAppchain(opts *bind.TransactOpts, chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "registerAppchain", chainID, broker, ruleAddr, trustRoot)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Transaction *TransactionSession) RegisterAppchain(chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Transaction.Contract.RegisterAppchain(&_Transaction.TransactOpts, chainID, broker, ruleAddr, trustRoot)
}

// RegisterAppchain is a paid mutator transaction binding the contract method 0x3cc412cd.
//
// Solidity: function registerAppchain(string chainID, string broker, address ruleAddr, bytes trustRoot) returns()
func (_Transaction *TransactionTransactorSession) RegisterAppchain(chainID string, broker string, ruleAddr common.Address, trustRoot []byte) (*types.Transaction, error) {
	return _Transaction.Contract.RegisterAppchain(&_Transaction.TransactOpts, chainID, broker, ruleAddr, trustRoot)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Transaction *TransactionTransactor) RegisterRemoteService(opts *bind.TransactOpts, chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "registerRemoteService", chainID, serviceID, whiteList)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Transaction *TransactionSession) RegisterRemoteService(chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Transaction.Contract.RegisterRemoteService(&_Transaction.TransactOpts, chainID, serviceID, whiteList)
}

// RegisterRemoteService is a paid mutator transaction binding the contract method 0x19bd2bb2.
//
// Solidity: function registerRemoteService(string chainID, string serviceID, address[] whiteList) returns()
func (_Transaction *TransactionTransactorSession) RegisterRemoteService(chainID string, serviceID string, whiteList []common.Address) (*types.Transaction, error) {
	return _Transaction.Contract.RegisterRemoteService(&_Transaction.TransactOpts, chainID, serviceID, whiteList)
}

// RollbackTransaction is a paid mutator transaction binding the contract method 0x23329285.
//
// Solidity: function rollbackTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactor) RollbackTransaction(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "rollbackTransaction", from, to, index)
}

// RollbackTransaction is a paid mutator transaction binding the contract method 0x23329285.
//
// Solidity: function rollbackTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionSession) RollbackTransaction(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.RollbackTransaction(&_Transaction.TransactOpts, from, to, index)
}

// RollbackTransaction is a paid mutator transaction binding the contract method 0x23329285.
//
// Solidity: function rollbackTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactorSession) RollbackTransaction(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.RollbackTransaction(&_Transaction.TransactOpts, from, to, index)
}

// StartTransaction is a paid mutator transaction binding the contract method 0xb98ba486.
//
// Solidity: function startTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactor) StartTransaction(opts *bind.TransactOpts, from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.contract.Transact(opts, "startTransaction", from, to, index)
}

// StartTransaction is a paid mutator transaction binding the contract method 0xb98ba486.
//
// Solidity: function startTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionSession) StartTransaction(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.StartTransaction(&_Transaction.TransactOpts, from, to, index)
}

// StartTransaction is a paid mutator transaction binding the contract method 0xb98ba486.
//
// Solidity: function startTransaction(string from, string to, uint64 index) returns()
func (_Transaction *TransactionTransactorSession) StartTransaction(from string, to string, index uint64) (*types.Transaction, error) {
	return _Transaction.Contract.StartTransaction(&_Transaction.TransactOpts, from, to, index)
}
