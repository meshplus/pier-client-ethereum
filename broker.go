// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BrokerABI is the input ABI used to generate the binding from.
const BrokerABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bitxhubID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_appchainID\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_valThreshold\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_adminThreshold\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_dataAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"group\",\"type\":\"string[]\"}],\"name\":\"throwInterchainEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes[][]\",\"name\":\"results\",\"type\":\"bytes[][]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"multiStatus\",\"type\":\"bool[]\"}],\"name\":\"throwReceiptEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"throwReceiptStatus\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adminThreshold\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"status\",\"type\":\"int64\"}],\"name\":\"audit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destFullServiceID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"funcCall\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcCb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsCb\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcRb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsRb\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"group\",\"type\":\"string[]\"}],\"name\":\"emitInterchainEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDstRollbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInnerMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLocalServiceList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getLocalWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"outServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getOutMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOuterMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getReceiptMessage\",\"outputs\":[{\"internalType\":\"bytes[][]\",\"name\":\"\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destAddr\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"callFunc\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"}],\"name\":\"invokeInterchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"srcFullID\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"destAddr\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"index\",\"type\":\"uint64[]\"},{\"internalType\":\"uint64[]\",\"name\":\"typ\",\"type\":\"uint64[]\"},{\"internalType\":\"string[]\",\"name\":\"callFunc\",\"type\":\"string[]\"},{\"internalType\":\"bytes[][]\",\"name\":\"args\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64[]\",\"name\":\"txStatus\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes[][]\",\"name\":\"signatures\",\"type\":\"bytes[][]\"},{\"internalType\":\"bool[]\",\"name\":\"isEncrypt\",\"type\":\"bool[]\"}],\"name\":\"invokeInterchains\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destAddr\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"callFunc\",\"type\":\"string\"},{\"internalType\":\"bytes[][]\",\"name\":\"args\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"}],\"name\":\"invokeMultiInterchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"bytes[][]\",\"name\":\"results\",\"type\":\"bytes[][]\"},{\"internalType\":\"bool[]\",\"name\":\"multiStatus\",\"type\":\"bool[]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"invokeMultiReceipt\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"bytes[][]\",\"name\":\"results\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"}],\"name\":\"invokeReceipt\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"ordered\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_adminThreshold\",\"type\":\"uint64\"}],\"name\":\"setAdmins\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"_valThreshold\",\"type\":\"uint64\"}],\"name\":\"setValidators\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"valThreshold\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BrokerFuncSigs maps the 4-byte function signature to its string representation.
var BrokerFuncSigs = map[string]string{
	"5f24dca3": "adminThreshold()",
	"14bfd6d0": "admins(uint256)",
	"b38ff85f": "audit(address,int64)",
	"ea5f6b3b": "emitInterchainEvent(string,string,bytes[],string,bytes[],string,bytes[],bool,string[])",
	"3b6bbe4a": "getCallbackMeta()",
	"564b81ef": "getChainID()",
	"ed63513f": "getDstRollbackMeta()",
	"67b9fa3b": "getInnerMeta()",
	"34a55404": "getLocalServiceList()",
	"aeb278c1": "getLocalWhiteList(address)",
	"29793e6e": "getOutMessage(string,uint64)",
	"c20cab50": "getOuterMeta()",
	"ca6954da": "getReceiptMessage(string,uint64)",
	"8129fc1c": "initialize()",
	"a2f6aa32": "invokeInterchain(string,string,uint64,uint64,string,bytes[],uint64,bytes[],bool)",
	"70ed3083": "invokeInterchains(string[],string[],uint64[],uint64[],string[],bytes[][],uint64[],bytes[][],bool[])",
	"7c78d69a": "invokeMultiInterchain(string,string,uint64,uint64,string,bytes[][],uint64,bytes[],bool)",
	"ed544390": "invokeMultiReceipt(string,string,uint64,uint64,bytes[][],bool[],uint64,bytes[])",
	"3d2e11dc": "invokeReceipt(string,string,uint64,uint64,bytes[][],uint64,bytes[])",
	"be123145": "register(bool)",
	"c7d3c8d6": "setAdmins(address[],uint64)",
	"652ae8af": "setValidators(address[],uint64)",
	"5c67a922": "valThreshold()",
	"35aa2e44": "validators(uint256)",
}

// BrokerBin is the compiled bytecode used for deploying new contracts.
var BrokerBin = "0x60806040523480156200001157600080fd5b50604051620060b8380380620060b8833981016040819052620000349162000396565b8651620000499060059060208a019062000149565b5085516200005f90600690602089019062000149565b50845162000075906007906020880190620001de565b50600880546001600160401b0319166001600160401b0386161790558251620000a6906009906020860190620001de565b50600a80546001600160401b0319166001600160401b03841617600160401b600160e01b031916680100000000000000006001600160a01b0384169081029190911790915560408051630354740160e31b81529051631aa3a0089160048082019260009290919082900301818387803b1580156200012357600080fd5b505af115801562000138573d6000803e3d6000fd5b5050505050505050505050620004a6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620001815760008555620001cc565b82601f106200019c57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cc578251825591602001919060010190620001af565b50620001da92915062000236565b5090565b828054828255906000526020600020908101928215620001cc579160200282015b82811115620001cc57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620001ff565b5b80821115620001da576000815560010162000237565b80516001600160a01b03811681146200026557600080fd5b919050565b600082601f8301126200027b578081fd5b815160206001600160401b038211156200029157fe5b808202620002a182820162000482565b838152828101908684018388018501891015620002bc578687fd5b8693505b85841015620002e957620002d4816200024d565b835260019390930192918401918401620002c0565b50979650505050505050565b600082601f83011262000306578081fd5b81516001600160401b038111156200031a57fe5b602062000330601f8301601f1916820162000482565b828152858284870101111562000344578384fd5b835b838110156200036357858101830151828201840152820162000346565b838111156200037457848385840101525b5095945050505050565b80516001600160401b03811681146200026557600080fd5b600080600080600080600060e0888a031215620003b1578283fd5b87516001600160401b0380821115620003c8578485fd5b620003d68b838c01620002f5565b985060208a0151915080821115620003ec578485fd5b620003fa8b838c01620002f5565b975060408a015191508082111562000410578485fd5b6200041e8b838c016200026a565b96506200042e60608b016200037e565b955060808a015191508082111562000444578485fd5b50620004538a828b016200026a565b9350506200046460a089016200037e565b91506200047460c089016200024d565b905092959891949750929550565b6040518181016001600160401b03811182821017156200049e57fe5b604052919050565b615c0280620004b66000396000f3fe60806040526004361061014b5760003560e01c80637c78d69a116100b6578063c20cab501161006f578063c20cab501461037a578063c7d3c8d61461038f578063ca6954da146103af578063ea5f6b3b146103df578063ed544390146103ff578063ed63513f146104125761014b565b80637c78d69a146102d25780638129fc1c146102e5578063a2f6aa32146102fa578063aeb278c11461030d578063b38ff85f1461033a578063be1231451461035a5761014b565b8063564b81ef11610108578063564b81ef146102305780635c67a922146102535780635f24dca314610275578063652ae8af1461028a57806367b9fa3b146102aa57806370ed3083146102bf5761014b565b806314bfd6d01461015057806329793e6e1461018657806334a55404146101b657806335aa2e44146101d85780633b6bbe4a146101f85780633d2e11dc1461021b575b600080fd5b34801561015c57600080fd5b5061017061016b366004614e09565b610427565b60405161017d91906151c2565b60405180910390f35b34801561019257600080fd5b506101a66101a1366004614dc5565b610451565b60405161017d9493929190615348565b3480156101c257600080fd5b506101cb6104ff565b60405161017d9190615241565b3480156101e457600080fd5b506101706101f3366004614e09565b610641565b34801561020457600080fd5b5061020d610651565b60405161017d9291906152d8565b61022e610229366004614b1f565b6106e6565b005b34801561023c57600080fd5b506102456108aa565b60405161017d929190615442565b34801561025f57600080fd5b506102686109d9565b60405161017d9190615965565b34801561028157600080fd5b506102686109e8565b34801561029657600080fd5b5061022e6102a53660046143ba565b6109f7565b3480156102b657600080fd5b5061020d610a97565b61022e6102cd366004614585565b610ae8565b61022e6102e0366004614bf8565b610d6e565b3480156102f157600080fd5b5061022e611565565b61022e610308366004614d06565b611713565b34801561031957600080fd5b5061032d610328366004614344565b611f22565b60405161017d919061532a565b34801561034657600080fd5b5061032d61035536600461437c565b611f44565b34801561036657600080fd5b5061022e6103753660046147a0565b6120ee565b34801561038657600080fd5b5061020d61225e565b34801561039b57600080fd5b5061022e6103aa3660046143ba565b6122af565b3480156103bb57600080fd5b506103cf6103ca366004614dc5565b61234f565b60405161017d94939291906151fa565b3480156103eb57600080fd5b5061022e6103fa3660046148eb565b6123ed565b61022e61040d366004614a22565b6126b1565b34801561041e57600080fd5b5061020d61285b565b6009818154811061043757600080fd5b6000918252602090912001546001600160a01b0316905081565b60608060006060600a60089054906101000a90046001600160a01b03166001600160a01b03166329793e6e87876040518363ffffffff1660e01b815260040161049b92919061566d565b60006040518083038186803b1580156104b357600080fd5b505afa1580156104c7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ef9190810190614860565b9299919850965090945092505050565b6001546060906000906001600160401b038111801561051d57600080fd5b5060405190808252806020026020018201604052801561055157816020015b606081526020019060019003908161053c5790505b50905060005b60015481101561063b57600a546001805461061c92600160401b90046001600160a01b031691635e57966d918590811061058d57fe5b6000918252602090912001546040516001600160e01b031960e084901b1681526105c3916001600160a01b0316906004016151c2565b60006040518083038186803b1580156105db57600080fd5b505afa1580156105ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261061791908101906147d8565b6128ac565b82828151811061062857fe5b6020908102919091010152600101610557565b50905090565b6007818154811061043757600080fd5b606080600a60089054906101000a90046001600160a01b03166001600160a01b0316633b6bbe4a6040518163ffffffff1660e01b815260040160006040518083038186803b1580156106a257600080fd5b505afa1580156106b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106de91908101906146df565b915091509091565b60006106f1886128ac565b905060006001600160401b038416158015906107175750836001600160401b0316600314155b15610720575060015b600a54604051632fae053160e01b8152600160401b9091046001600160a01b031690632fae05319061075d9085908c908c90600190600401615467565b602060405180830381600087803b15801561077757600080fd5b505af115801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af91906147bc565b6107b857600080fd5b600a54600854604051630fedea0f60e21b8152600160401b9092046001600160a01b031691633fb7a83c9161080c9186918d918d918d918d918d918d916007916001600160401b03909116906004016154b1565b602060405180830381600087803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e91906147bc565b6108835760405162461bcd60e51b815260040161087a906158c0565b60405180910390fd5b600061088f838a6128db565b905061089e8189848d8a612908565b50505050505050505050565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060938493909260069291849183018282801561093c5780601f106109115761010080835404028352916020019161093c565b820191906000526020600020905b81548152906001019060200180831161091f57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b50505050509050915091509091565b6008546001600160401b031681565b600a546001600160401b031681565b6000805b600954811015610a3b5760098181548110610a1257fe5b6000918252602090912001546001600160a01b0316331415610a3357600191505b6001016109fb565b50600181151514610a5e5760405162461bcd60e51b815260040161087a90615889565b8251610a71906007906020860190613e89565b50506008805467ffffffffffffffff19166001600160401b039290921691909117905550565b606080600a60089054906101000a90046001600160a01b03166001600160a01b03166367b9fa3b6040518163ffffffff1660e01b815260040160006040518083038186803b1580156106a257600080fd5b60005b89518160ff16101561089e5760046000600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8c8560ff1681518110610b2e57fe5b60200260200101516040518263ffffffff1660e01b8152600401610b529190615335565b60206040518083038186803b158015610b6a57600080fd5b505afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190614360565b6001600160a01b0316815260208101919091526040016000205460ff16151560011415610c8f576000610bea8a8360ff1681518110610bdd57fe5b60200260200101516128ac565b9050610c898b8360ff1681518110610bfe57fe5b6020026020010151828b8560ff1681518110610c1657fe5b6020026020010151888660ff1681518110610c2d57fe5b6020026020010151878760ff1681518110610c4457fe5b60200260200101516040518060400160405280601a81526020017f6473742073657276696365206973206e6f74206f7264657265640000000000008152506001612daf565b50610d66565b610d668a8260ff1681518110610ca157fe5b60200260200101518a8360ff1681518110610cb857fe5b60200260200101518a8460ff1681518110610ccf57fe5b60200260200101518a8560ff1681518110610ce657fe5b60200260200101518a8660ff1681518110610cfd57fe5b60200260200101518a8760ff1681518110610d1457fe5b60200260200101518a8860ff1681518110610d2b57fe5b60200260200101518a8960ff1681518110610d4257fe5b60200260200101518a8a60ff1681518110610d5957fe5b6020026020010151611713565b600101610aeb565b6000610d79896128ac565b90506000610d878b836128db565b90506000600a60089054906101000a90046001600160a01b03166001600160a01b03166315f4753a8d858d8d8d8d8d8d6007600860009054906101000a90046001600160401b03166040518b63ffffffff1660e01b8152600401610df49a99989796959493929190615550565b602060405180830381600087803b158015610e0e57600080fd5b505af1158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4691906147bc565b905080610e7d57610e758c848c8988604051806060016040528060278152602001615b5f602791398d51612daf565b50505061155a565b600080600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b8152600401610ec19190615335565b60206040518083038186803b158015610ed957600080fd5b505afa158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190614360565b6001600160a01b0316815260208101919091526040016000205460ff16610f5a57610e758c848c8988604051806060016040528060278152602001615b86602791398d51612daf565b50600086516001600160401b0381118015610f7457600080fd5b50604051908082528060200260200182016040528015610fa857816020015b6060815260200190600190039081610f935790505b509050600087516001600160401b0381118015610fc457600080fd5b50604051908082528060200260200182016040528015610fee578160200160208202803683370190505b5060019a5090506001600160401b03871661122257600a5460405163015895cd60e11b81526001600160401b038d1691600160401b90046001600160a01b0316906302b12b9a90611043908790600401615335565b60206040518083038186803b15801561105b57600080fd5b505afa15801561106f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110939190614e21565b6001600160401b0316101561117a5761113f600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b81526004016110e69190615335565b60206040518083038186803b1580156110fe57600080fd5b505afa158015611112573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111369190614360565b8a8a60006131db565b9250905060005b81518110156111785781818151811061115b57fe5b60200260200101516111705760029a50611178565b600101611146565b505b600a60089054906101000a90046001600160a01b03166001600160a01b0316632fae05318e868e60006040518563ffffffff1660e01b81526004016111c29493929190615467565b602060405180830381600087803b1580156111dc57600080fd5b505af11580156111f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121491906147bc565b61121d57600080fd5b611425565b600a5460405163015895cd60e11b81526001600160401b038d1691600160401b90046001600160a01b0316906302b12b9a90611262908790600401615335565b60206040518083038186803b15801561127a57600080fd5b505afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b29190614e21565b6001600160401b0316106113625761135d600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b81526004016113049190615335565b60206040518083038186803b15801561131c57600080fd5b505afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113549190614360565b8a8a60016131db565b925090505b600a60089054906101000a90046001600160a01b03166001600160a01b0316632fae05318e868e60026040518563ffffffff1660e01b81526004016113aa9493929190615467565b602060405180830381600087803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc91906147bc565b61140557600080fd5b866001600160401b0316600114156114205760029950611425565b600399505b600a60089054906101000a90046001600160a01b03166001600160a01b0316631f42ed99848d888e87876040518763ffffffff1660e01b815260040161147096959493929190615698565b600060405180830381600087803b15801561148a57600080fd5b505af115801561149e573d6000803e3d6000fd5b50505050841561151b57600080516020615b3f8339815191528b858f8d60006040519080825280602002602001820160405280156114f057816020015b60608152602001906001900390816114db5790505b506114fa88613344565b8760405161150e97969594939291906159fd565b60405180910390a1611555565b600080516020615b3f8339815191528b858f8d8661153888613344565b8760405161154c97969594939291906159fd565b60405180910390a15b505050505b505050505050505050565b6000805b6009548110156115a9576009818154811061158057fe5b6000918252602090912001546001600160a01b03163314156115a157600191505b600101611569565b506001811515146115cc5760405162461bcd60e51b815260040161087a90615889565b60005b600154811015611627576000806000600184815481106115eb57fe5b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016115cf565b5060005b60035481101561169b57600260006003838154811061164657fe5b60009182526020808320909101546001600160a01b03168352820192909252604001812080546001600160801b0319168155906116866001830182613eee565b50600201805461ffff1916905560010161162b565b506116a860016000613eee565b600a60089054906101000a90046001600160a01b03166001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156116f857600080fd5b505af115801561170c573d6000803e3d6000fd5b5050505050565b600061171e896128ac565b9050600061172c8b836128db565b90506000600a60089054906101000a90046001600160a01b03166001600160a01b031663a96d72118d858d8d8d8d8d8d6007600860009054906101000a90046001600160401b03166040518b63ffffffff1660e01b81526004016117999a99989796959493929190615605565b602060405180830381600087803b1580156117b357600080fd5b505af11580156117c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117eb91906147bc565b90508061183757610e758c848c89886040518060400160405280601781526020017f696e76616c6964206d756c74692d7369676e61747572650000000000000000008152506001612daf565b600080600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b815260040161187b9190615335565b60206040518083038186803b15801561189357600080fd5b505afa1580156118a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cb9190614360565b6001600160a01b0316815260208101919091526040016000205460ff1661191457610e758c848c8988604051806060016040528060278152602001615b86602791396001612daf565b506040805160018082528183019092526000916020808301908036833701905050905060018160008151811061194657fe5b91151560209283029190910190910152604080516001808252818301909252600091816020015b606081526020019060019003908161196d5790505090506001600160401b038716611bd457600a5460405163015895cd60e11b81526001600160401b038d1691600160401b90046001600160a01b0316906302b12b9a906119d2908790600401615335565b60206040518083038186803b1580156119ea57600080fd5b505afa1580156119fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a229190614e21565b6001600160401b03161015611b0457611ace600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b8152600401611a759190615335565b60206040518083038186803b158015611a8d57600080fd5b505afa158015611aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac59190614360565b8a8a60006133d1565b83600081518110611adb57fe5b6020026020010183600081518110611aef57fe5b60200260200101829052821515151581525050505b600a60089054906101000a90046001600160a01b03166001600160a01b0316632fae05318e868e60006040518563ffffffff1660e01b8152600401611b4c9493929190615467565b602060405180830381600087803b158015611b6657600080fd5b505af1158015611b7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9e91906147bc565b611ba757600080fd5b81600081518110611bb457fe5b602002602001015115611bca5760019950611bcf565b600299505b611e08565b600a5460405163015895cd60e11b81526001600160401b038d1691600160401b90046001600160a01b0316906302b12b9a90611c14908790600401615335565b60206040518083038186803b158015611c2c57600080fd5b505afa158015611c40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c649190614e21565b6001600160401b031610611d4557611d0f600a60089054906101000a90046001600160a01b03166001600160a01b03166315706fdf8e6040518263ffffffff1660e01b8152600401611cb69190615335565b60206040518083038186803b158015611cce57600080fd5b505afa158015611ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d069190614360565b8a8a60016133d1565b83600081518110611d1c57fe5b6020026020010183600081518110611d3057fe5b60200260200101829052821515151581525050505b600a60089054906101000a90046001600160a01b03166001600160a01b0316632fae05318e868e60026040518563ffffffff1660e01b8152600401611d8d9493929190615467565b602060405180830381600087803b158015611da757600080fd5b505af1158015611dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ddf91906147bc565b611de857600080fd5b866001600160401b031660011415611e035760029950611e08565b600399505b600a60089054906101000a90046001600160a01b03166001600160a01b0316631f42ed99848d888e86886040518763ffffffff1660e01b8152600401611e5396959493929190615698565b600060405180830381600087803b158015611e6d57600080fd5b505af1158015611e81573d6000803e3d6000fd5b505050508415611ef157600080516020615b3f8339815191528b858f8d6000604051908082528060200260200182016040528015611ed357816020015b6060815260200190600190039081611ebe5790505b50611edd87613344565b8860405161150e97969594939291906159fd565b600080516020615b3f8339815191528b858f8d85611f0e87613344565b8860405161154c97969594939291906159fd565b6001600160a01b03811660009081526020819052604090205460ff165b919050565b600080805b600954811015611f895760098181548110611f6057fe5b6000918252602090912001546001600160a01b0316331415611f8157600191505b600101611f49565b50600181151514611fac5760405162461bcd60e51b815260040161087a90615889565b6000611fb88585613537565b905080611fc95760009250506120e7565b806001141561209f576001600160a01b038516600090815260026020819052604082209081015481546001600160801b031916825560ff169161200f6001830182613eee565b50600201805461ffff191690556001600160a01b038616600081815260208181526040808320805460ff19908116600190811790925560049093529083208054909216941515949094179055825480840184559290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690910180546001600160a01b03191690911790556120e1565b6001600160a01b038516600090815260026020526040812080546001600160801b0319168155906120d36001830182613eee565b50600201805461ffff191690555b60019250505b5092915050565b3233141561210e5760405162461bcd60e51b815260040161087a90615852565b3360009081526020819052604090205460ff168061214457503360009081526002602081905260409091200154610100900460ff165b1561214e5761225b565b6040805160a0810182526000808252602082015260095490918201906001600160401b038111801561217f57600080fd5b506040519080825280602002602001820160405280156121a9578160200160208202803683370190505b508152821515602080830191909152600160409283018190523360009081526002835283902084518154868501516001600160401b03908116600160401b0267ffffffffffffffff60401b199190931667ffffffffffffffff19909216919091171617815592840151805161222693928501929190910190613e89565b5060608201516002909101805460809093015115156101000261ff001992151560ff1990941693909317919091169190911790555b50565b606080600a60089054906101000a90046001600160a01b03166001600160a01b031663c20cab506040518163ffffffff1660e01b815260040160006040518083038186803b1580156106a257600080fd5b6000805b6009548110156122f357600981815481106122ca57fe5b6000918252602090912001546001600160a01b03163314156122eb57600191505b6001016122b3565b506001811515146123165760405162461bcd60e51b815260040161087a90615889565b8251612329906009906020860190613e89565b5050600a805467ffffffffffffffff19166001600160401b039290921691909117905550565b60606000806060600a60089054906101000a90046001600160a01b03166001600160a01b031663ca6954da87876040518363ffffffff1660e01b815260040161239992919061566d565b60006040518083038186803b1580156123b157600080fd5b505afa1580156123c5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104ef91908101906144c4565b3360009081526020819052604090205460ff1615156001146124215760405162461bcd60e51b815260040161087a90615790565b600a54604051633d29b0a360e21b8152600160401b9091046001600160a01b03169063f4a6c28c9061245a906006908d906004016156fd565b60206040518083038186803b15801561247257600080fd5b505afa158015612486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124aa91906147bc565b156124c75760405162461bcd60e51b815260040161087a906157c7565b600a54604051635e57966d60e01b815260009161250491600160401b9091046001600160a01b031690635e57966d906105c39033906004016151c2565b90506000612512828c6128db565b600a54604051630fb71b5f60e21b8152919250600091600160401b9091046001600160a01b031690633edc6d7c9061254e908590600401615335565b602060405180830381600087803b15801561256857600080fd5b505af115801561257c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a09190614e21565b9050600a60089054906101000a90046001600160a01b03166001600160a01b0316633a92472b8387878f8f8f8f8f8f6040518a63ffffffff1660e01b81526004016125f399989796959493929190615389565b600060405180830381600087803b15801561260d57600080fd5b505af1158015612621573d6000803e3d6000fd5b5050505060006126318c8c61377e565b9050851561267657604080516020808201835260008083528351818152918201909352909d5090612672565b606081526020019060019003908161265d5790505b509a505b7f909d9ea83291f2a53345a88af1951de43019d4e85abf9e8afba2475fd87d9a3b828e868f8f868b60405161154c9796959493929190615979565b60006126bc896128ac565b905060006001600160401b038416158015906126e25750836001600160401b0316600314155b156126eb575060015b600a54604051632fae053160e01b8152600160401b9091046001600160a01b031690632fae0531906127289085908d908d90600190600401615467565b602060405180830381600087803b15801561274257600080fd5b505af1158015612756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061277a91906147bc565b61278357600080fd5b600a54600854604051630fedea0f60e21b8152600160401b9092046001600160a01b031691633fb7a83c916127d79186918e918e918e918e918d918d916007916001600160401b03909116906004016154b1565b602060405180830381600087803b1580156127f157600080fd5b505af1158015612805573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282991906147bc565b61283257600080fd5b600061283e838b6128db565b905061284e818a848e8b8b6137ff565b5050505050505050505050565b606080600a60089054906101000a90046001600160a01b03166001600160a01b031663ed63513f6040518163ffffffff1660e01b815260040160006040518083038186803b1580156106a257600080fd5b606060056006836040516020016128c593929190615178565b6040516020818303038152906040529050919050565b606082826040516020016128f092919061513c565b60405160208183030381529060405290505b92915050565b606080606085156129f757600a54604051637e88e0ff60e01b8152600160401b9091046001600160a01b031690637e88e0ff9061294b908b908b9060040161566d565b60006040518083038186803b15801561296357600080fd5b505afa158015612977573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261299f919081019061480a565b805191945092506001600160401b03811180156129bb57600080fd5b506040519080825280602002602001820160405280156129ef57816020015b60608152602001906001900390816129da5790505b509050612aee565b600a546040516346539f6360e01b8152600160401b9091046001600160a01b0316906346539f6390612a2f908b908b9060040161566d565b60006040518083038186803b158015612a4757600080fd5b505afa158015612a5b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a83919081019061480a565b855191945092508490600090612a9557fe5b6020026020010151518251016001600160401b0381118015612ab657600080fd5b50604051908082528060200260200182016040528015612aea57816020015b6060815260200190600190039081612ad55790505b5090505b60005b8251811015612b2d57828181518110612b0657fe5b6020026020010151828281518110612b1a57fe5b6020908102919091010152600101612af1565b5085612b9f5760005b84600081518110612b4357fe5b602002602001015151811015612b9d5784600081518110612b6057fe5b60200260200101518181518110612b7357fe5b6020026020010151828285510181518110612b8a57fe5b6020908102919091010152600101612b36565b505b604051602001612bae906151bf565b6040516020818303038152906040528051906020012083604051602001612bd59190614fe9565b6040516020818303038152906040528051906020012014612d7f57600083604051602001612c039190615034565b60408051808303601f1901815290829052600a546315706fdf60e01b8352909250600091600160401b9091046001600160a01b0316906315706fdf90612c4d908a90600401615335565b60206040518083038186803b158015612c6557600080fd5b505afa158015612c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c9d9190614360565b6001600160a01b03168284604051602401612cb89190615241565b60408051601f198184030181529082905291612cd391614fe9565b60408051918290039091206020830180516001600160e01b03166001600160e01b031990921691909117905251612d0a9190614fe9565b6000604051808303816000865af19150503d8060008114612d47576040519150601f19603f3d011682016040523d82523d6000602084013e612d4c565b606091505b50509050600080516020615bad83398151915281604051612d6d919061532a565b60405180910390a1505050505061170c565b600080516020615bad8339815191526001604051612d9d919061532a565b60405180910390a15050505050505050565b6000612dbb88886128db565b9050600080836001600160401b03166001600160401b0381118015612ddf57600080fd5b50604051908082528060200260200182016040528015612e1357816020015b6060815260200190600190039081612dfe5790505b5060408051600180825281830190925291925060009190816020015b6060815260200190600190039081612e2f57905050905060005b856001600160401b0316816001600160401b03161015612ea5578682600081518110612e7157fe5b60200260200101819052508183826001600160401b031681518110612e9257fe5b6020908102919091010152600101612e49565b506001600160401b038816612f5557600a54604051632fae053160e01b8152600160401b9091046001600160a01b031690632fae053190612ef1908e908e908e90600090600401615467565b602060405180830381600087803b158015612f0b57600080fd5b505af1158015612f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f4391906147bc565b612f4c57600080fd5b6002925061300d565b600a54604051632fae053160e01b8152600160401b9091046001600160a01b031690632fae053190612f92908e908e908e90600290600401615467565b602060405180830381600087803b158015612fac57600080fd5b505af1158015612fc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe491906147bc565b612fed57600080fd5b876001600160401b031660011415613008576002925061300d565b600392505b6000856001600160401b03166001600160401b038111801561302e57600080fd5b50604051908082528060200260200182016040528015613058578160200160208202803683370190505b50905060005b866001600160401b0316816001600160401b031610156130a757600082826001600160401b03168151811061308f57fe5b9115156020928302919091019091015260010161305e565b50600a54604051631f42ed9960e01b8152600160401b9091046001600160a01b031690631f42ed99906130e89088908e908d908a908a908990600401615698565b600060405180830381600087803b15801561310257600080fd5b505af1158015613116573d6000803e3d6000fd5b50505050871561319357600080516020615b3f8339815191528a8c8e87600060405190808252806020026020018201604052801561316857816020015b60608152602001906001900390816131535790505b5061317289613344565b8760405161318697969594939291906159fd565b60405180910390a16131cd565b600080516020615b3f8339815191528a8c8e87876131b089613344565b876040516131c497969594939291906159fd565b60405180910390a15b505050505050505050505050565b6060806000600190506060806040516020016131f6906151bf565b604051602081830303815290604052805190602001208860405160200161321d9190614fe9565b6040516020818303038152906040528051906020012014613337576000808a6001600160a01b03168a6040516020016132569190615095565b6040516020818303038152906040528a8a6040516024016132789291906151d6565b60408051601f19818403018152908290529161329391614fe9565b60408051918290039091206020830180516001600160e01b03166001600160e01b0319909216919091179052516132ca9190614fe9565b6000604051808303816000865af19150503d8060008114613307576040519150601f19603f3d011682016040523d82523d6000602084013e61330c565b606091505b50915091508194508415613334578080602001905181019061332e9190614464565b90945092505b50505b9890975095505050505050565b6000606060005b83518110156133c257600084828151811061336257fe5b6020026020010151905060005b81518110156133b8578382828151811061338557fe5b602002602001015160405160200161339e929190615005565b60408051601f19818403018152919052935060010161336f565b505060010161334b565b50805160209091012092915050565b6000606060006001905060606040516020016133ec906151bf565b60405160208183030381529060405280519060200120876040516020016134139190614fe9565b604051602081830303815290604052805190602001201461352a57600080896001600160a01b03168960405160200161344c919061510a565b604051602081830303815290604052898960405160240161346e9291906152c5565b60408051601f19818403018152908290529161348991614fe9565b60408051918290039091206020830180516001600160e01b03166001600160e01b0319909216919091179052516134c09190614fe9565b6000604051808303816000865af19150503d80600081146134fd576040519150601f19603f3d011682016040523d82523d6000602084013e613502565b606091505b509150915081935083156135275780806020019051810190613524919061454b565b92505b50505b9097909650945050505050565b6001600160a01b038216600090815260026020819052604082200154610100900460ff166135775760405162461bcd60e51b815260040161087a906158f7565b8160070b6000148061358c57508160070b6001145b6135a85760405162461bcd60e51b815260040161087a9061592e565b60005b6001600160a01b038416600090815260026020526040902060010154811015613633576001600160a01b03841660009081526002602052604090206001018054339190839081106135f857fe5b6000918252602090912001546001600160a01b0316141561362b5760405162461bcd60e51b815260040161087a90615810565b6001016135ab565b506001600160a01b03831660009081526002602052604090208054600190910180543392600160401b81046001600160401b03908116918116919091011690811061367a57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508160070b60001415613725576001600160a01b0383166000908152600260205260409020805460016001600160401b03600160401b808404821683018216810267ffffffffffffffff60401b199094169390931793849055600a54600954939094048116931690910301141561372057506002612902565b613775565b6001600160a01b0383166000908152600260205260409020805467ffffffffffffffff19811660016001600160401b039283160182161791829055600a5481169116141561377557506001612902565b50600092915050565b600080836040516020016137929190614fe9565b604051602081830303815290604052905060005b83518110156137ef57818482815181106137bc57fe5b60200260200101516040516020016137d5929190615005565b60408051601f1981840301815291905291506001016137a6565b5080516020909101209392505050565b60608060608615613b0c57600a54604051637e88e0ff60e01b8152600160401b9091046001600160a01b031690637e88e0ff90613842908c908c9060040161566d565b60006040518083038186803b15801561385a57600080fd5b505afa15801561386e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613896919081019061480a565b805191945092506001600160401b03811180156138b257600080fd5b506040519080825280602002602001820160405280156138e657816020015b60608152602001906001900390816138d15790505b50905060005b82518110156139285782818151811061390157fe5b602002602001015182828151811061391557fe5b60209081029190910101526001016138ec565b50604051602001613938906151bf565b604051602081830303815290604052805190602001208360405160200161395f9190614fe9565b6040516020818303038152906040528051906020012014613b0c57600a546040516315706fdf60e01b8152600091600160401b90046001600160a01b0316906315706fdf906139b2908a90600401615335565b60206040518083038186803b1580156139ca57600080fd5b505afa1580156139de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a029190614360565b6001600160a01b031684604051602001613a1c9190615061565b6040516020818303038152906040528387604051602401613a3e929190615254565b60408051601f198184030181529082905291613a5991614fe9565b60408051918290039091206020830180516001600160e01b03166001600160e01b031990921691909117905251613a909190614fe9565b6000604051808303816000865af19150503d8060008114613acd576040519150601f19603f3d011682016040523d82523d6000602084013e613ad2565b606091505b5050905080613b0a57600080516020615bad8339815191526000604051613af9919061532a565b60405180910390a150505050613e81565b505b6000805b8551811015613b4a57858181518110613b2557fe5b60200260200101511515600115151415613b425760019150613b4a565b600101613b10565b508015613e5657600a546040516346539f6360e01b8152600160401b9091046001600160a01b0316906346539f6390613b89908d908d9060040161566d565b60006040518083038186803b158015613ba157600080fd5b505afa158015613bb5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613bdd919081019061480a565b805191955093506001600160401b0381118015613bf957600080fd5b50604051908082528060200260200182016040528015613c2d57816020015b6060815260200190600190039081613c185790505b50915060005b8351811015613c6f57838181518110613c4857fe5b6020026020010151838281518110613c5c57fe5b6020908102919091010152600101613c33565b50604051602001613c7f906151bf565b6040516020818303038152906040528051906020012084604051602001613ca69190614fe9565b6040516020818303038152906040528051906020012014613e5657600a546040516315706fdf60e01b8152600091600160401b90046001600160a01b0316906315706fdf90613cf9908b90600401615335565b60206040518083038186803b158015613d1157600080fd5b505afa158015613d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d499190614360565b6001600160a01b031685604051602001613d6391906150c9565b60405160208183030381529060405284888a604051602401613d8793929190615282565b60408051601f198184030181529082905291613da291614fe9565b60408051918290039091206020830180516001600160e01b03166001600160e01b031990921691909117905251613dd99190614fe9565b6000604051808303816000865af19150503d8060008114613e16576040519150601f19603f3d011682016040523d82523d6000602084013e613e1b565b606091505b5050905080613e5457600080516020615bad8339815191526000604051613e42919061532a565b60405180910390a15050505050613e81565b505b600080516020615bad8339815191526001604051613e74919061532a565b60405180910390a1505050505b505050505050565b828054828255906000526020600020908101928215613ede579160200282015b82811115613ede57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613ea9565b50613eea929150613f08565b5090565b508054600082559060005260206000209081019061225b91905b5b80821115613eea5760008155600101613f09565b6000613f30613f2b84615aa9565b615a69565b9050828152838383011115613f4457600080fd5b828260208301376000602084830101529392505050565b6000613f69613f2b84615aa9565b9050828152838383011115613f7d57600080fd5b613f8b836020830184615ad6565b9392505050565b600082601f830112613fa2578081fd5b81356020613fb2613f2b83615a8c565b82815281810190858301855b85811015613fe757613fd5898684358b010161410f565b84529284019290840190600101613fbe565b5090979650505050505050565b600082601f830112614004578081fd5b81516020614014613f2b83615a8c565b82815281810190858301855b85811015613fe757614037898684518b0101614179565b84529284019290840190600101614020565b600082601f830112614059578081fd5b81356020614069613f2b83615a8c565b8281528181019085830183850287018401881015614085578586fd5b855b85811015613fe757813561409a81615b1b565b84529284019290840190600101614087565b600082601f8301126140bc578081fd5b815160206140cc613f2b83615a8c565b82815281810190858301838502870184018810156140e8578586fd5b855b85811015613fe75781516140fd81615b1b565b845292840192908401906001016140ea565b600082601f83011261411f578081fd5b8135602061412f613f2b83615a8c565b82815281810190858301855b85811015613fe7578135880189603f820112614155578788fd5b6141668a8783013560408401613f1d565b855250928401929084019060010161413b565b600082601f830112614189578081fd5b81516020614199613f2b83615a8c565b82815281810190858301855b85811015613fe7578151880189603f8201126141bf578788fd5b6141d08a8783015160408401613f5b565b85525092840192908401906001016141a5565b600082601f8301126141f3578081fd5b81356020614203613f2b83615a8c565b82815281810190858301855b85811015613fe757614226898684358b01016142fb565b8452928401929084019060010161420f565b600082601f830112614248578081fd5b81516020614258613f2b83615a8c565b82815281810190858301855b85811015613fe75761427b898684518b010161431a565b84529284019290840190600101614264565b600082601f83011261429d578081fd5b813560206142ad613f2b83615a8c565b82815281810190858301838502870184018810156142c9578586fd5b855b85811015613fe75781356142de81615b29565b845292840192908401906001016142cb565b8035611f3f81615b1b565b600082601f83011261430b578081fd5b613f8b83833560208501613f1d565b600082601f83011261432a578081fd5b613f8b83835160208501613f5b565b8035611f3f81615b29565b600060208284031215614355578081fd5b8135613f8b81615b06565b600060208284031215614371578081fd5b8151613f8b81615b06565b6000806040838503121561438e578081fd5b823561439981615b06565b91506020830135600781900b81146143af578182fd5b809150509250929050565b600080604083850312156143cc578182fd5b82356001600160401b038111156143e1578283fd5b8301601f810185136143f1578283fd5b80356020614401613f2b83615a8c565b82815281810190848301838502860184018a101561441d578788fd5b8795505b8486101561444857803561443481615b06565b835260019590950194918301918301614421565b5095506144589050868201614339565b93505050509250929050565b60008060408385031215614476578182fd5b82516001600160401b038082111561448c578384fd5b61449886838701613ff4565b935060208501519150808211156144ad578283fd5b506144ba858286016140ac565b9150509250929050565b600080600080608085870312156144d9578182fd5b84516001600160401b03808211156144ef578384fd5b6144fb88838901613ff4565b95506020870151915061450d82615b29565b604087015191945061451e82615b1b565b606087015191935080821115614532578283fd5b5061453f878288016140ac565b91505092959194509250565b60006020828403121561455c578081fd5b81516001600160401b03811115614571578182fd5b61457d84828501614179565b949350505050565b60008060008060008060008060006101208a8c0312156145a3578687fd5b89356001600160401b03808211156145b9578889fd5b6145c58d838e016141e3565b9a5060208c01359150808211156145da578889fd5b6145e68d838e016141e3565b995060408c01359150808211156145fb578889fd5b6146078d838e0161428d565b985060608c013591508082111561461c578687fd5b6146288d838e0161428d565b975060808c013591508082111561463d578687fd5b6146498d838e016141e3565b965060a08c013591508082111561465e578586fd5b61466a8d838e01613f92565b955060c08c013591508082111561467f578485fd5b61468b8d838e0161428d565b945060e08c01359150808211156146a0578384fd5b6146ac8d838e01613f92565b93506101008c01359150808211156146c2578283fd5b506146cf8c828d01614049565b9150509295985092959850929598565b600080604083850312156146f1578182fd5b82516001600160401b0380821115614707578384fd5b61471386838701614238565b9350602091508185015181811115614729578384fd5b85019050601f8101861361473b578283fd5b8051614749613f2b82615a8c565b81815283810190838501858402850186018a1015614765578687fd5b8694505b8385101561479057805161477c81615b29565b835260019490940193918501918501614769565b5080955050505050509250929050565b6000602082840312156147b1578081fd5b8135613f8b81615b1b565b6000602082840312156147cd578081fd5b8151613f8b81615b1b565b6000602082840312156147e9578081fd5b81516001600160401b038111156147fe578182fd5b61457d8482850161431a565b6000806040838503121561481c578182fd5b82516001600160401b0380821115614832578384fd5b61483e8683870161431a565b93506020850151915080821115614853578283fd5b506144ba85828601614179565b60008060008060808587031215614875578182fd5b84516001600160401b038082111561488b578384fd5b6148978883890161431a565b955060208701519150808211156148ac578384fd5b6148b888838901614179565b9450604087015191506148ca82615b1b565b6060870151919350808211156148de578283fd5b5061453f87828801614238565b60008060008060008060008060006101208a8c031215614909578283fd5b89356001600160401b038082111561491f578485fd5b61492b8d838e016142fb565b9a5060208c0135915080821115614940578485fd5b61494c8d838e016142fb565b995060408c0135915080821115614961578485fd5b61496d8d838e0161410f565b985060608c0135915080821115614982578485fd5b61498e8d838e016142fb565b975060808c01359150808211156149a3578485fd5b6149af8d838e0161410f565b965060a08c01359150808211156149c4578485fd5b6149d08d838e016142fb565b955060c08c01359150808211156149e5578485fd5b6149f18d838e0161410f565b94506149ff60e08d016142f0565b93506101008c0135915080821115614a15578283fd5b506146cf8c828d016141e3565b600080600080600080600080610100898b031215614a3e578182fd5b88356001600160401b0380821115614a54578384fd5b614a608c838d016142fb565b995060208b0135915080821115614a75578384fd5b614a818c838d016142fb565b9850614a8f60408c01614339565b9750614a9d60608c01614339565b965060808b0135915080821115614ab2578384fd5b614abe8c838d01613f92565b955060a08b0135915080821115614ad3578384fd5b614adf8c838d01614049565b9450614aed60c08c01614339565b935060e08b0135915080821115614b02578283fd5b50614b0f8b828c0161410f565b9150509295985092959890939650565b600080600080600080600060e0888a031215614b39578081fd5b87356001600160401b0380821115614b4f578283fd5b614b5b8b838c016142fb565b985060208a0135915080821115614b70578283fd5b614b7c8b838c016142fb565b9750614b8a60408b01614339565b9650614b9860608b01614339565b955060808a0135915080821115614bad578283fd5b614bb98b838c01613f92565b9450614bc760a08b01614339565b935060c08a0135915080821115614bdc578283fd5b50614be98a828b0161410f565b91505092959891949750929550565b60008060008060008060008060006101208a8c031215614c16578283fd5b89356001600160401b0380821115614c2c578485fd5b614c388d838e016142fb565b9a5060208c0135915080821115614c4d578485fd5b614c598d838e016142fb565b9950614c6760408d01614339565b9850614c7560608d01614339565b975060808c0135915080821115614c8a578485fd5b614c968d838e016142fb565b965060a08c0135915080821115614cab578485fd5b614cb78d838e01613f92565b9550614cc560c08d01614339565b945060e08c0135915080821115614cda578384fd5b50614ce78c828d0161410f565b925050614cf76101008b016142f0565b90509295985092959850929598565b60008060008060008060008060006101208a8c031215614d24578283fd5b89356001600160401b0380821115614d3a578485fd5b614d468d838e016142fb565b9a5060208c0135915080821115614d5b578485fd5b614d678d838e016142fb565b9950614d7560408d01614339565b9850614d8360608d01614339565b975060808c0135915080821115614d98578485fd5b614da48d838e016142fb565b965060a08c0135915080821115614db9578485fd5b614cb78d838e0161410f565b60008060408385031215614dd7578182fd5b82356001600160401b03811115614dec578283fd5b614df8858286016142fb565b92505060208301356143af81615b29565b600060208284031215614e1a578081fd5b5035919050565b600060208284031215614e32578081fd5b8151613f8b81615b29565b6000815480845260208085019450838352808320835b83811015614e785781546001600160a01b031687529582019560019182019101614e53565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b85811015614ec9578284038952614eb7848351614f07565b98850198935090840190600101614e9f565b5091979650505050505050565b6000815180845260208085019450808401835b83811015614e78578151151587529582019590820190600101614ee9565b6000815180845260208085018081965082840281019150828601855b85811015614ec9578284038952614f3b848351614f4d565b98850198935090840190600101614f23565b60008151808452614f65816020860160208601615ad6565b601f01601f19169290920160200192915050565b60008154600180821660008114614f975760018114614fae57614fe0565b60ff198316865260028304607f1686019350614fe0565b600283048560005260208060002060005b83811015614fd85781548a820152908501908201614fbf565b505050860193505b50505092915050565b60008251614ffb818460208701615ad6565b9190910192915050565b60008351615017818460208801615ad6565b83519083019061502b818360208801615ad6565b01949350505050565b60008251615046818460208701615ad6565b682862797465735b5d2960b81b920191825250600901919050565b60008251615073818460208701615ad6565b6f2862797465735b5d2c626f6f6c5b5d2960801b920191825250601001919050565b600082516150a7818460208701615ad6565b6f2862797465735b5d5b5d2c626f6f6c2960801b920191825250601001919050565b600082516150db818460208701615ad6565b7f2862797465735b5d2c626f6f6c5b5d2c62797465735b5d5b5d29000000000000920191825250601a01919050565b6000825161511c818460208701615ad6565b6d2862797465735b5d2c626f6f6c2960901b920191825250600e01919050565b6000835161514e818460208801615ad6565b602d60f81b908301908152835161516c816001840160208801615ad6565b01600101949350505050565b60006151848286614f79565b601d60f91b8082526151996001830187614f79565b91508082525083516151b2816001840160208801615ad6565b0160010195945050505050565b90565b6001600160a01b0391909116815260200190565b6000604082526151e96040830185614e83565b905082151560208301529392505050565b60006080825261520d6080830187614e83565b6001600160401b0386166020840152841515604084015282810360608401526152368185614ed6565b979650505050505050565b600060208252613f8b6020830184614f07565b6000604082526152676040830185614f07565b82810360208401526152798185614ed6565b95945050505050565b6000606082526152956060830186614f07565b82810360208401526152a78186614ed6565b905082810360408401526152bb8185614e83565b9695505050505050565b6000604082526151e96040830185614f07565b6000604082526152eb6040830185614f07565b828103602084810191909152845180835285820192820190845b81811015613fe75784516001600160401b031683529383019391830191600101615305565b901515815260200190565b600060208252613f8b6020830184614f4d565b60006080825261535b6080830187614f4d565b828103602084015261536d8187614f07565b9050841515604084015282810360608401526152368185614f07565b600061012080835261539d8184018d614f4d565b90508a1515602084015282810360408401526153b9818b614f07565b905082810360608401526153cd818a614f4d565b905082810360808401526153e18189614f07565b905082810360a08401526153f58188614f4d565b905082810360c08401526154098187614f07565b905082810360e084015261541d8186614f4d565b90508281036101008401526154328185614f07565b9c9b505050505050505050505050565b6000604082526154556040830185614f4d565b82810360208401526152798185614f4d565b60006080825261547a6080830187614f4d565b828103602084015261548c8187614f4d565b9150506001600160401b03808516604084015280841660608401525095945050505050565b60006101208083526154c58184018d614f4d565b905082810360208401526154d9818c614f4d565b90506001600160401b03808b166040850152808a1660608501528382036080850152615505828a614e83565b915080881660a085015283820360c08501526155218288614f07565b915083820360e08501526155358287614e3d565b925080851661010085015250509a9950505050505050505050565b60006101408083526155648184018e614f4d565b90508281036020840152615578818d614f4d565b90506001600160401b03808c166040850152808b16606085015283820360808501526155a4828b614f4d565b915083820360a08501526155b8828a614e83565b915080881660c085015283820360e08501526155d48288614f07565b91508382036101008501526155e98287614e3d565b925080851661012085015250509b9a5050505050505050505050565b60006101408083526156198184018e614f4d565b9050828103602084015261562d818d614f4d565b90506001600160401b03808c166040850152808b1660608501528382036080850152615659828b614f4d565b915083820360a08501526155b8828a614f07565b6000604082526156806040830185614f4d565b90506001600160401b03831660208301529392505050565b600060c082526156ab60c0830189614f4d565b6001600160401b03888116602085015287151560408501528616606084015282810360808401526156dc8186614e83565b905082810360a08401526156f08185614ed6565b9998505050505050505050565b6000604082016040835281855460018082166000811461572457600181146157425761577b565b60028304607f16855260ff198316606088015260808701935061577b565b600283048086526157528a615aca565b875b828110156157715781548a82016060015290840190602001615754565b8901606001955050505b50505083810360208501526152bb8186614f4d565b6020808252601d908201527f496e766f6b657220617265206e6f7420696e207768697465206c697374000000604082015260600190565b60208082526029908201527f6465737420736572766963652069732062656c6f6e6720746f2063757272656e604082015268742062726f6b65722160b81b606082015260800190565b60208082526022908201527f63757272656e74207573652068617320766f746564207468652070726f706f73604082015261185b60f21b606082015260800190565b60208082526018908201527f7265676973746572206e6f7420627920636f6e74726163740000000000000000604082015260600190565b6020808252601d908201527f496e766f6b657220617265206e6f7420696e2061646d696e206c697374000000604082015260600190565b6020808252601f908201527f696e76616c696420526563656970742d6d756c74692d7369676e617475726500604082015260600190565b6020808252601b908201527f7468652070726f706f73616c20646f6573206e6f742065786973740000000000604082015260600190565b6020808252601c908201527f766f7465207374617475732073686f756c642062652030206f72203100000000604082015260600190565b6001600160401b0391909116815260200190565b60006001600160401b038916825260e0602083015261599b60e0830189614f4d565b82810360408401526159ad8189614f4d565b905082810360608401526159c18188614f4d565b905082810360808401526159d58187614f07565b90508460a084015282810360c08401526159ef8185614f07565b9a9950505050505050505050565b60006001600160401b03808a16835260e06020840152615a2060e084018a614f4d565b8381036040850152615a32818a614f4d565b905081881660608501528381036080850152615a4e8188614e83565b9150508460a084015282810360c08401526159ef8185614ed6565b6040518181016001600160401b0381118282101715615a8457fe5b604052919050565b60006001600160401b03821115615a9f57fe5b5060209081020190565b60006001600160401b03821115615abc57fe5b50601f01601f191660200190565b60009081526020902090565b60005b83811015615af1578181015183820152602001615ad9565b83811115615b00576000848401525b50505050565b6001600160a01b038116811461225b57600080fd5b801515811461225b57600080fd5b6001600160401b038116811461225b57600080fdfe0b2a5917a61c71e6aaefd1420dd67bc3146c5aa43315ab084e58eecc29ddbf1f696e76616c6964206d756c7469496e746572636861696e2d6d756c74692d7369676e6174757265646573742061646472657373206973206e6f7420696e206c6f63616c207768697465206c697374dadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beaea2646970667358221220f0946a078cf379d8a69118b7d427f6a0c78682abed55ae00378bfaaae4df455664736f6c63430007060033"

// DeployBroker deploys a new Ethereum contract, binding an instance of Broker to it.
func DeployBroker(auth *bind.TransactOpts, backend bind.ContractBackend, _bitxhubID string, _appchainID string, _validators []common.Address, _valThreshold uint64, _admins []common.Address, _adminThreshold uint64, _dataAddr common.Address) (common.Address, *types.Transaction, *Broker, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BrokerBin), backend, _bitxhubID, _appchainID, _validators, _valThreshold, _admins, _adminThreshold, _dataAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// Broker is an auto generated Go binding around an Ethereum contract.
type Broker struct {
	BrokerCaller     // Read-only binding to the contract
	BrokerTransactor // Write-only binding to the contract
	BrokerFilterer   // Log filterer for contract events
}

// BrokerCaller is an auto generated read-only Go binding around an Ethereum contract.
type BrokerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BrokerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BrokerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BrokerSession struct {
	Contract     *Broker           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BrokerCallerSession struct {
	Contract *BrokerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// BrokerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BrokerTransactorSession struct {
	Contract     *BrokerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerRaw is an auto generated low-level Go binding around an Ethereum contract.
type BrokerRaw struct {
	Contract *Broker // Generic contract binding to access the raw methods on
}

// BrokerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BrokerCallerRaw struct {
	Contract *BrokerCaller // Generic read-only contract binding to access the raw methods on
}

// BrokerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BrokerTransactorRaw struct {
	Contract *BrokerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBroker creates a new instance of Broker, bound to a specific deployed contract.
func NewBroker(address common.Address, backend bind.ContractBackend) (*Broker, error) {
	contract, err := bindBroker(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// NewBrokerCaller creates a new read-only instance of Broker, bound to a specific deployed contract.
func NewBrokerCaller(address common.Address, caller bind.ContractCaller) (*BrokerCaller, error) {
	contract, err := bindBroker(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerCaller{contract: contract}, nil
}

// NewBrokerTransactor creates a new write-only instance of Broker, bound to a specific deployed contract.
func NewBrokerTransactor(address common.Address, transactor bind.ContractTransactor) (*BrokerTransactor, error) {
	contract, err := bindBroker(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerTransactor{contract: contract}, nil
}

// NewBrokerFilterer creates a new log filterer instance of Broker, bound to a specific deployed contract.
func NewBrokerFilterer(address common.Address, filterer bind.ContractFilterer) (*BrokerFilterer, error) {
	contract, err := bindBroker(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BrokerFilterer{contract: contract}, nil
}

// bindBroker binds a generic wrapper to an already deployed contract.
func bindBroker(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.BrokerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transact(opts, method, params...)
}

// AdminThreshold is a free data retrieval call binding the contract method 0x5f24dca3.
//
// Solidity: function adminThreshold() view returns(uint64)
func (_Broker *BrokerCaller) AdminThreshold(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "adminThreshold")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// AdminThreshold is a free data retrieval call binding the contract method 0x5f24dca3.
//
// Solidity: function adminThreshold() view returns(uint64)
func (_Broker *BrokerSession) AdminThreshold() (uint64, error) {
	return _Broker.Contract.AdminThreshold(&_Broker.CallOpts)
}

// AdminThreshold is a free data retrieval call binding the contract method 0x5f24dca3.
//
// Solidity: function adminThreshold() view returns(uint64)
func (_Broker *BrokerCallerSession) AdminThreshold() (uint64, error) {
	return _Broker.Contract.AdminThreshold(&_Broker.CallOpts)
}

// Admins is a free data retrieval call binding the contract method 0x14bfd6d0.
//
// Solidity: function admins(uint256 ) view returns(address)
func (_Broker *BrokerCaller) Admins(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "admins", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Admins is a free data retrieval call binding the contract method 0x14bfd6d0.
//
// Solidity: function admins(uint256 ) view returns(address)
func (_Broker *BrokerSession) Admins(arg0 *big.Int) (common.Address, error) {
	return _Broker.Contract.Admins(&_Broker.CallOpts, arg0)
}

// Admins is a free data retrieval call binding the contract method 0x14bfd6d0.
//
// Solidity: function admins(uint256 ) view returns(address)
func (_Broker *BrokerCallerSession) Admins(arg0 *big.Int) (common.Address, error) {
	return _Broker.Contract.Admins(&_Broker.CallOpts, arg0)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetCallbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getCallbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCaller) GetChainID(opts *bind.CallOpts) (string, string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getChainID")

	if err != nil {
		return *new(string), *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)

	return out0, out1, err

}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCallerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetDstRollbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getDstRollbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetInnerMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getInnerMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerCaller) GetLocalServiceList(opts *bind.CallOpts) ([]string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getLocalServiceList")

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerSession) GetLocalServiceList() ([]string, error) {
	return _Broker.Contract.GetLocalServiceList(&_Broker.CallOpts)
}

// GetLocalServiceList is a free data retrieval call binding the contract method 0x34a55404.
//
// Solidity: function getLocalServiceList() view returns(string[])
func (_Broker *BrokerCallerSession) GetLocalServiceList() ([]string, error) {
	return _Broker.Contract.GetLocalServiceList(&_Broker.CallOpts)
}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerCaller) GetLocalWhiteList(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getLocalWhiteList", addr)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerSession) GetLocalWhiteList(addr common.Address) (bool, error) {
	return _Broker.Contract.GetLocalWhiteList(&_Broker.CallOpts, addr)
}

// GetLocalWhiteList is a free data retrieval call binding the contract method 0xaeb278c1.
//
// Solidity: function getLocalWhiteList(address addr) view returns(bool)
func (_Broker *BrokerCallerSession) GetLocalWhiteList(addr common.Address) (bool, error) {
	return _Broker.Contract.GetLocalWhiteList(&_Broker.CallOpts, addr)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_Broker *BrokerCaller) GetOutMessage(opts *bind.CallOpts, outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOutMessage", outServicePair, idx)

	if err != nil {
		return *new(string), *new([][]byte), *new(bool), *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)
	out3 := *abi.ConvertType(out[3], new([]string)).(*[]string)

	return out0, out1, out2, out3, err

}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_Broker *BrokerSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_Broker *BrokerCallerSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetOuterMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOuterMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_Broker *BrokerCaller) GetReceiptMessage(opts *bind.CallOpts, inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getReceiptMessage", inServicePair, idx)

	if err != nil {
		return *new([][][]byte), *new(uint64), *new(bool), *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([][][]byte)).(*[][][]byte)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)
	out3 := *abi.ConvertType(out[3], new([]bool)).(*[]bool)

	return out0, out1, out2, out3, err

}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_Broker *BrokerSession) GetReceiptMessage(inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	return _Broker.Contract.GetReceiptMessage(&_Broker.CallOpts, inServicePair, idx)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_Broker *BrokerCallerSession) GetReceiptMessage(inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	return _Broker.Contract.GetReceiptMessage(&_Broker.CallOpts, inServicePair, idx)
}

// ValThreshold is a free data retrieval call binding the contract method 0x5c67a922.
//
// Solidity: function valThreshold() view returns(uint64)
func (_Broker *BrokerCaller) ValThreshold(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "valThreshold")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// ValThreshold is a free data retrieval call binding the contract method 0x5c67a922.
//
// Solidity: function valThreshold() view returns(uint64)
func (_Broker *BrokerSession) ValThreshold() (uint64, error) {
	return _Broker.Contract.ValThreshold(&_Broker.CallOpts)
}

// ValThreshold is a free data retrieval call binding the contract method 0x5c67a922.
//
// Solidity: function valThreshold() view returns(uint64)
func (_Broker *BrokerCallerSession) ValThreshold() (uint64, error) {
	return _Broker.Contract.ValThreshold(&_Broker.CallOpts)
}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(address)
func (_Broker *BrokerCaller) Validators(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "validators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(address)
func (_Broker *BrokerSession) Validators(arg0 *big.Int) (common.Address, error) {
	return _Broker.Contract.Validators(&_Broker.CallOpts, arg0)
}

// Validators is a free data retrieval call binding the contract method 0x35aa2e44.
//
// Solidity: function validators(uint256 ) view returns(address)
func (_Broker *BrokerCallerSession) Validators(arg0 *big.Int) (common.Address, error) {
	return _Broker.Contract.Validators(&_Broker.CallOpts, arg0)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactor) Audit(opts *bind.TransactOpts, addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "audit", addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactorSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xea5f6b3b.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt, string[] group) returns()
func (_Broker *BrokerTransactor) EmitInterchainEvent(opts *bind.TransactOpts, destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool, group []string) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "emitInterchainEvent", destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt, group)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xea5f6b3b.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt, string[] group) returns()
func (_Broker *BrokerSession) EmitInterchainEvent(destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool, group []string) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt, group)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xea5f6b3b.
//
// Solidity: function emitInterchainEvent(string destFullServiceID, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb, bool isEncrypt, string[] group) returns()
func (_Broker *BrokerTransactorSession) EmitInterchainEvent(destFullServiceID string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte, isEncrypt bool, group []string) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destFullServiceID, funcCall, args, funcCb, argsCb, funcRb, argsRb, isEncrypt, group)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactorSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactor) InvokeInterchain(opts *bind.TransactOpts, srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeInterchain", srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerSession) InvokeInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0xa2f6aa32.
//
// Solidity: function invokeInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactorSession) InvokeInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchains is a paid mutator transaction binding the contract method 0x70ed3083.
//
// Solidity: function invokeInterchains(string[] srcFullID, string[] destAddr, uint64[] index, uint64[] typ, string[] callFunc, bytes[][] args, uint64[] txStatus, bytes[][] signatures, bool[] isEncrypt) payable returns()
func (_Broker *BrokerTransactor) InvokeInterchains(opts *bind.TransactOpts, srcFullID []string, destAddr []string, index []uint64, typ []uint64, callFunc []string, args [][][]byte, txStatus []uint64, signatures [][][]byte, isEncrypt []bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeInterchains", srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchains is a paid mutator transaction binding the contract method 0x70ed3083.
//
// Solidity: function invokeInterchains(string[] srcFullID, string[] destAddr, uint64[] index, uint64[] typ, string[] callFunc, bytes[][] args, uint64[] txStatus, bytes[][] signatures, bool[] isEncrypt) payable returns()
func (_Broker *BrokerSession) InvokeInterchains(srcFullID []string, destAddr []string, index []uint64, typ []uint64, callFunc []string, args [][][]byte, txStatus []uint64, signatures [][][]byte, isEncrypt []bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchains(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeInterchains is a paid mutator transaction binding the contract method 0x70ed3083.
//
// Solidity: function invokeInterchains(string[] srcFullID, string[] destAddr, uint64[] index, uint64[] typ, string[] callFunc, bytes[][] args, uint64[] txStatus, bytes[][] signatures, bool[] isEncrypt) payable returns()
func (_Broker *BrokerTransactorSession) InvokeInterchains(srcFullID []string, destAddr []string, index []uint64, typ []uint64, callFunc []string, args [][][]byte, txStatus []uint64, signatures [][][]byte, isEncrypt []bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchains(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeMultiInterchain is a paid mutator transaction binding the contract method 0x7c78d69a.
//
// Solidity: function invokeMultiInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactor) InvokeMultiInterchain(opts *bind.TransactOpts, srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeMultiInterchain", srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeMultiInterchain is a paid mutator transaction binding the contract method 0x7c78d69a.
//
// Solidity: function invokeMultiInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerSession) InvokeMultiInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeMultiInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeMultiInterchain is a paid mutator transaction binding the contract method 0x7c78d69a.
//
// Solidity: function invokeMultiInterchain(string srcFullID, string destAddr, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] signatures, bool isEncrypt) payable returns()
func (_Broker *BrokerTransactorSession) InvokeMultiInterchain(srcFullID string, destAddr string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, signatures [][]byte, isEncrypt bool) (*types.Transaction, error) {
	return _Broker.Contract.InvokeMultiInterchain(&_Broker.TransactOpts, srcFullID, destAddr, index, typ, callFunc, args, txStatus, signatures, isEncrypt)
}

// InvokeMultiReceipt is a paid mutator transaction binding the contract method 0xed544390.
//
// Solidity: function invokeMultiReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, bool[] multiStatus, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactor) InvokeMultiReceipt(opts *bind.TransactOpts, srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, multiStatus []bool, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeMultiReceipt", srcAddr, dstFullID, index, typ, results, multiStatus, txStatus, signatures)
}

// InvokeMultiReceipt is a paid mutator transaction binding the contract method 0xed544390.
//
// Solidity: function invokeMultiReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, bool[] multiStatus, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerSession) InvokeMultiReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, multiStatus []bool, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeMultiReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, results, multiStatus, txStatus, signatures)
}

// InvokeMultiReceipt is a paid mutator transaction binding the contract method 0xed544390.
//
// Solidity: function invokeMultiReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, bool[] multiStatus, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactorSession) InvokeMultiReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, multiStatus []bool, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeMultiReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, results, multiStatus, txStatus, signatures)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0x3d2e11dc.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactor) InvokeReceipt(opts *bind.TransactOpts, srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeReceipt", srcAddr, dstFullID, index, typ, results, txStatus, signatures)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0x3d2e11dc.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerSession) InvokeReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, results, txStatus, signatures)
}

// InvokeReceipt is a paid mutator transaction binding the contract method 0x3d2e11dc.
//
// Solidity: function invokeReceipt(string srcAddr, string dstFullID, uint64 index, uint64 typ, bytes[][] results, uint64 txStatus, bytes[] signatures) payable returns()
func (_Broker *BrokerTransactorSession) InvokeReceipt(srcAddr string, dstFullID string, index uint64, typ uint64, results [][][]byte, txStatus uint64, signatures [][]byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeReceipt(&_Broker.TransactOpts, srcAddr, dstFullID, index, typ, results, txStatus, signatures)
}

// Register is a paid mutator transaction binding the contract method 0xbe123145.
//
// Solidity: function register(bool ordered) returns()
func (_Broker *BrokerTransactor) Register(opts *bind.TransactOpts, ordered bool) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "register", ordered)
}

// Register is a paid mutator transaction binding the contract method 0xbe123145.
//
// Solidity: function register(bool ordered) returns()
func (_Broker *BrokerSession) Register(ordered bool) (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts, ordered)
}

// Register is a paid mutator transaction binding the contract method 0xbe123145.
//
// Solidity: function register(bool ordered) returns()
func (_Broker *BrokerTransactorSession) Register(ordered bool) (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts, ordered)
}

// SetAdmins is a paid mutator transaction binding the contract method 0xc7d3c8d6.
//
// Solidity: function setAdmins(address[] _admins, uint64 _adminThreshold) returns()
func (_Broker *BrokerTransactor) SetAdmins(opts *bind.TransactOpts, _admins []common.Address, _adminThreshold uint64) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "setAdmins", _admins, _adminThreshold)
}

// SetAdmins is a paid mutator transaction binding the contract method 0xc7d3c8d6.
//
// Solidity: function setAdmins(address[] _admins, uint64 _adminThreshold) returns()
func (_Broker *BrokerSession) SetAdmins(_admins []common.Address, _adminThreshold uint64) (*types.Transaction, error) {
	return _Broker.Contract.SetAdmins(&_Broker.TransactOpts, _admins, _adminThreshold)
}

// SetAdmins is a paid mutator transaction binding the contract method 0xc7d3c8d6.
//
// Solidity: function setAdmins(address[] _admins, uint64 _adminThreshold) returns()
func (_Broker *BrokerTransactorSession) SetAdmins(_admins []common.Address, _adminThreshold uint64) (*types.Transaction, error) {
	return _Broker.Contract.SetAdmins(&_Broker.TransactOpts, _admins, _adminThreshold)
}

// SetValidators is a paid mutator transaction binding the contract method 0x652ae8af.
//
// Solidity: function setValidators(address[] _validators, uint64 _valThreshold) returns()
func (_Broker *BrokerTransactor) SetValidators(opts *bind.TransactOpts, _validators []common.Address, _valThreshold uint64) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "setValidators", _validators, _valThreshold)
}

// SetValidators is a paid mutator transaction binding the contract method 0x652ae8af.
//
// Solidity: function setValidators(address[] _validators, uint64 _valThreshold) returns()
func (_Broker *BrokerSession) SetValidators(_validators []common.Address, _valThreshold uint64) (*types.Transaction, error) {
	return _Broker.Contract.SetValidators(&_Broker.TransactOpts, _validators, _valThreshold)
}

// SetValidators is a paid mutator transaction binding the contract method 0x652ae8af.
//
// Solidity: function setValidators(address[] _validators, uint64 _valThreshold) returns()
func (_Broker *BrokerTransactorSession) SetValidators(_validators []common.Address, _valThreshold uint64) (*types.Transaction, error) {
	return _Broker.Contract.SetValidators(&_Broker.TransactOpts, _validators, _valThreshold)
}

// BrokerThrowInterchainEventIterator is returned from FilterThrowInterchainEvent and is used to iterate over the raw logs and unpacked data for ThrowInterchainEvent events raised by the Broker contract.
type BrokerThrowInterchainEventIterator struct {
	Event *BrokerThrowInterchainEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowInterchainEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowInterchainEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowInterchainEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowInterchainEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowInterchainEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowInterchainEvent represents a ThrowInterchainEvent event raised by the Broker contract.
type BrokerThrowInterchainEvent struct {
	Index     uint64
	DstFullID string
	SrcFullID string
	Func      string
	Args      [][]byte
	Hash      [32]byte
	Group     []string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterThrowInterchainEvent is a free log retrieval operation binding the contract event 0x909d9ea83291f2a53345a88af1951de43019d4e85abf9e8afba2475fd87d9a3b.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash, string[] group)
func (_Broker *BrokerFilterer) FilterThrowInterchainEvent(opts *bind.FilterOpts) (*BrokerThrowInterchainEventIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwInterchainEvent")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowInterchainEventIterator{contract: _Broker.contract, event: "throwInterchainEvent", logs: logs, sub: sub}, nil
}

// WatchThrowInterchainEvent is a free log subscription operation binding the contract event 0x909d9ea83291f2a53345a88af1951de43019d4e85abf9e8afba2475fd87d9a3b.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash, string[] group)
func (_Broker *BrokerFilterer) WatchThrowInterchainEvent(opts *bind.WatchOpts, sink chan<- *BrokerThrowInterchainEvent) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwInterchainEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowInterchainEvent)
				if err := _Broker.contract.UnpackLog(event, "throwInterchainEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowInterchainEvent is a log parse operation binding the contract event 0x909d9ea83291f2a53345a88af1951de43019d4e85abf9e8afba2475fd87d9a3b.
//
// Solidity: event throwInterchainEvent(uint64 index, string dstFullID, string srcFullID, string func, bytes[] args, bytes32 hash, string[] group)
func (_Broker *BrokerFilterer) ParseThrowInterchainEvent(log types.Log) (*BrokerThrowInterchainEvent, error) {
	event := new(BrokerThrowInterchainEvent)
	if err := _Broker.contract.UnpackLog(event, "throwInterchainEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BrokerThrowReceiptEventIterator is returned from FilterThrowReceiptEvent and is used to iterate over the raw logs and unpacked data for ThrowReceiptEvent events raised by the Broker contract.
type BrokerThrowReceiptEventIterator struct {
	Event *BrokerThrowReceiptEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowReceiptEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowReceiptEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowReceiptEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowReceiptEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowReceiptEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowReceiptEvent represents a ThrowReceiptEvent event raised by the Broker contract.
type BrokerThrowReceiptEvent struct {
	Index       uint64
	DstFullID   string
	SrcFullID   string
	Typ         uint64
	Results     [][][]byte
	Hash        [32]byte
	MultiStatus []bool
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterThrowReceiptEvent is a free log retrieval operation binding the contract event 0x0b2a5917a61c71e6aaefd1420dd67bc3146c5aa43315ab084e58eecc29ddbf1f.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bytes[][] results, bytes32 hash, bool[] multiStatus)
func (_Broker *BrokerFilterer) FilterThrowReceiptEvent(opts *bind.FilterOpts) (*BrokerThrowReceiptEventIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwReceiptEvent")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowReceiptEventIterator{contract: _Broker.contract, event: "throwReceiptEvent", logs: logs, sub: sub}, nil
}

// WatchThrowReceiptEvent is a free log subscription operation binding the contract event 0x0b2a5917a61c71e6aaefd1420dd67bc3146c5aa43315ab084e58eecc29ddbf1f.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bytes[][] results, bytes32 hash, bool[] multiStatus)
func (_Broker *BrokerFilterer) WatchThrowReceiptEvent(opts *bind.WatchOpts, sink chan<- *BrokerThrowReceiptEvent) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwReceiptEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowReceiptEvent)
				if err := _Broker.contract.UnpackLog(event, "throwReceiptEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowReceiptEvent is a log parse operation binding the contract event 0x0b2a5917a61c71e6aaefd1420dd67bc3146c5aa43315ab084e58eecc29ddbf1f.
//
// Solidity: event throwReceiptEvent(uint64 index, string dstFullID, string srcFullID, uint64 typ, bytes[][] results, bytes32 hash, bool[] multiStatus)
func (_Broker *BrokerFilterer) ParseThrowReceiptEvent(log types.Log) (*BrokerThrowReceiptEvent, error) {
	event := new(BrokerThrowReceiptEvent)
	if err := _Broker.contract.UnpackLog(event, "throwReceiptEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BrokerThrowReceiptStatusIterator is returned from FilterThrowReceiptStatus and is used to iterate over the raw logs and unpacked data for ThrowReceiptStatus events raised by the Broker contract.
type BrokerThrowReceiptStatusIterator struct {
	Event *BrokerThrowReceiptStatus // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowReceiptStatusIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowReceiptStatus)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowReceiptStatus)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowReceiptStatusIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowReceiptStatusIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowReceiptStatus represents a ThrowReceiptStatus event raised by the Broker contract.
type BrokerThrowReceiptStatus struct {
	Arg0 bool
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterThrowReceiptStatus is a free log retrieval operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) FilterThrowReceiptStatus(opts *bind.FilterOpts) (*BrokerThrowReceiptStatusIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwReceiptStatus")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowReceiptStatusIterator{contract: _Broker.contract, event: "throwReceiptStatus", logs: logs, sub: sub}, nil
}

// WatchThrowReceiptStatus is a free log subscription operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) WatchThrowReceiptStatus(opts *bind.WatchOpts, sink chan<- *BrokerThrowReceiptStatus) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwReceiptStatus")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowReceiptStatus)
				if err := _Broker.contract.UnpackLog(event, "throwReceiptStatus", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowReceiptStatus is a log parse operation binding the contract event 0xdadb08102ef1bab9720995485cebd09625dc443d3e2b5b9577b37a24de97beae.
//
// Solidity: event throwReceiptStatus(bool arg0)
func (_Broker *BrokerFilterer) ParseThrowReceiptStatus(log types.Log) (*BrokerThrowReceiptStatus, error) {
	event := new(BrokerThrowReceiptStatus)
	if err := _Broker.contract.UnpackLog(event, "throwReceiptStatus", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// BrokerDataABI is the input ABI used to generate the binding from.
const BrokerDataABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"asciiString\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"appchainId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"destFullService\",\"type\":\"string\"}],\"name\":\"checkAppchainIdContains\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"callFunc\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"multiSignatures\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"valThreshold\",\"type\":\"uint64\"}],\"name\":\"checkInterchainMultiSigns\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"callFunc\",\"type\":\"string\"},{\"internalType\":\"bytes[][]\",\"name\":\"args\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"multiSignatures\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"valThreshold\",\"type\":\"uint64\"}],\"name\":\"checkMultiInterchainMultiSigns\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"bytes[][]\",\"name\":\"result\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"txStatus\",\"type\":\"uint64\"},{\"internalType\":\"bytes[]\",\"name\":\"multiSignatures\",\"type\":\"bytes[]\"},{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint64\",\"name\":\"valThreshold\",\"type\":\"uint64\"}],\"name\":\"checkReceiptMultiSigns\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"getCallbackMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDstRollbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"}],\"name\":\"getInCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInnerMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"outServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getOutMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOuterMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getReceiptMessage\",\"outputs\":[{\"internalType\":\"bytes[][]\",\"name\":\"\",\"type\":\"bytes[][]\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"}],\"name\":\"getRollbackMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"reqType\",\"type\":\"uint64\"}],\"name\":\"invokeIndexUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"}],\"name\":\"markOutCounter\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"group\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"funcCall\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"args\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcCb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsCb\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"funcRb\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"argsRb\",\"type\":\"bytes[]\"}],\"name\":\"setOutMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"servicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isEncrypt\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"typ\",\"type\":\"uint64\"},{\"internalType\":\"bytes[][]\",\"name\":\"results\",\"type\":\"bytes[][]\"},{\"internalType\":\"bool[]\",\"name\":\"multiStatus\",\"type\":\"bool[]\"}],\"name\":\"setReceiptMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_address\",\"type\":\"string\"}],\"name\":\"stringToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// BrokerDataFuncSigs maps the 4-byte function signature to its string representation.
var BrokerDataFuncSigs = map[string]string{
	"5e57966d": "addressToString(address)",
	"f4a6c28c": "checkAppchainIdContains(string,string)",
	"a96d7211": "checkInterchainMultiSigns(string,string,uint64,uint64,string,bytes[],uint64,bytes[],address[],uint64)",
	"15f4753a": "checkMultiInterchainMultiSigns(string,string,uint64,uint64,string,bytes[][],uint64,bytes[],address[],uint64)",
	"3fb7a83c": "checkReceiptMultiSigns(string,string,uint64,uint64,bytes[][],uint64,bytes[],address[],uint64)",
	"46539f63": "getCallbackMessage(string,uint64)",
	"3b6bbe4a": "getCallbackMeta()",
	"ed63513f": "getDstRollbackMeta()",
	"02b12b9a": "getInCounter(string)",
	"67b9fa3b": "getInnerMeta()",
	"29793e6e": "getOutMessage(string,uint64)",
	"c20cab50": "getOuterMeta()",
	"ca6954da": "getReceiptMessage(string,uint64)",
	"7e88e0ff": "getRollbackMessage(string,uint64)",
	"8129fc1c": "initialize()",
	"2fae0531": "invokeIndexUpdate(string,string,uint64,uint64)",
	"3edc6d7c": "markOutCounter(string)",
	"1aa3a008": "register()",
	"3a92472b": "setOutMessage(string,bool,string[],string,bytes[],string,bytes[],string,bytes[])",
	"1f42ed99": "setReceiptMessage(string,uint64,bool,uint64,bytes[][],bool[])",
	"15706fdf": "stringToAddress(string)",
}

// BrokerData is an auto generated Go binding around an Ethereum contract.
type BrokerData struct {
	BrokerDataCaller     // Read-only binding to the contract
	BrokerDataTransactor // Write-only binding to the contract
	BrokerDataFilterer   // Log filterer for contract events
}

// BrokerDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type BrokerDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BrokerDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerDataFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BrokerDataFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BrokerDataSession struct {
	Contract     *BrokerData       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BrokerDataCallerSession struct {
	Contract *BrokerDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// BrokerDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BrokerDataTransactorSession struct {
	Contract     *BrokerDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// BrokerDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type BrokerDataRaw struct {
	Contract *BrokerData // Generic contract binding to access the raw methods on
}

// BrokerDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BrokerDataCallerRaw struct {
	Contract *BrokerDataCaller // Generic read-only contract binding to access the raw methods on
}

// BrokerDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BrokerDataTransactorRaw struct {
	Contract *BrokerDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBrokerData creates a new instance of BrokerData, bound to a specific deployed contract.
func NewBrokerData(address common.Address, backend bind.ContractBackend) (*BrokerData, error) {
	contract, err := bindBrokerData(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BrokerData{BrokerDataCaller: BrokerDataCaller{contract: contract}, BrokerDataTransactor: BrokerDataTransactor{contract: contract}, BrokerDataFilterer: BrokerDataFilterer{contract: contract}}, nil
}

// NewBrokerDataCaller creates a new read-only instance of BrokerData, bound to a specific deployed contract.
func NewBrokerDataCaller(address common.Address, caller bind.ContractCaller) (*BrokerDataCaller, error) {
	contract, err := bindBrokerData(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerDataCaller{contract: contract}, nil
}

// NewBrokerDataTransactor creates a new write-only instance of BrokerData, bound to a specific deployed contract.
func NewBrokerDataTransactor(address common.Address, transactor bind.ContractTransactor) (*BrokerDataTransactor, error) {
	contract, err := bindBrokerData(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerDataTransactor{contract: contract}, nil
}

// NewBrokerDataFilterer creates a new log filterer instance of BrokerData, bound to a specific deployed contract.
func NewBrokerDataFilterer(address common.Address, filterer bind.ContractFilterer) (*BrokerDataFilterer, error) {
	contract, err := bindBrokerData(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BrokerDataFilterer{contract: contract}, nil
}

// bindBrokerData binds a generic wrapper to an already deployed contract.
func bindBrokerData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BrokerData *BrokerDataRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BrokerData.Contract.BrokerDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BrokerData *BrokerDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BrokerData.Contract.BrokerDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BrokerData *BrokerDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BrokerData.Contract.BrokerDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BrokerData *BrokerDataCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _BrokerData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BrokerData *BrokerDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BrokerData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BrokerData *BrokerDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BrokerData.Contract.contract.Transact(opts, method, params...)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_BrokerData *BrokerDataCaller) AddressToString(opts *bind.CallOpts, account common.Address) (string, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "addressToString", account)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_BrokerData *BrokerDataSession) AddressToString(account common.Address) (string, error) {
	return _BrokerData.Contract.AddressToString(&_BrokerData.CallOpts, account)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_BrokerData *BrokerDataCallerSession) AddressToString(account common.Address) (string, error) {
	return _BrokerData.Contract.AddressToString(&_BrokerData.CallOpts, account)
}

// CheckAppchainIdContains is a free data retrieval call binding the contract method 0xf4a6c28c.
//
// Solidity: function checkAppchainIdContains(string appchainId, string destFullService) pure returns(bool)
func (_BrokerData *BrokerDataCaller) CheckAppchainIdContains(opts *bind.CallOpts, appchainId string, destFullService string) (bool, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "checkAppchainIdContains", appchainId, destFullService)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// CheckAppchainIdContains is a free data retrieval call binding the contract method 0xf4a6c28c.
//
// Solidity: function checkAppchainIdContains(string appchainId, string destFullService) pure returns(bool)
func (_BrokerData *BrokerDataSession) CheckAppchainIdContains(appchainId string, destFullService string) (bool, error) {
	return _BrokerData.Contract.CheckAppchainIdContains(&_BrokerData.CallOpts, appchainId, destFullService)
}

// CheckAppchainIdContains is a free data retrieval call binding the contract method 0xf4a6c28c.
//
// Solidity: function checkAppchainIdContains(string appchainId, string destFullService) pure returns(bool)
func (_BrokerData *BrokerDataCallerSession) CheckAppchainIdContains(appchainId string, destFullService string) (bool, error) {
	return _BrokerData.Contract.CheckAppchainIdContains(&_BrokerData.CallOpts, appchainId, destFullService)
}

// GetCallbackMessage is a free data retrieval call binding the contract method 0x46539f63.
//
// Solidity: function getCallbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataCaller) GetCallbackMessage(opts *bind.CallOpts, servicePair string, index uint64) (string, [][]byte, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getCallbackMessage", servicePair, index)

	if err != nil {
		return *new(string), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)

	return out0, out1, err

}

// GetCallbackMessage is a free data retrieval call binding the contract method 0x46539f63.
//
// Solidity: function getCallbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataSession) GetCallbackMessage(servicePair string, index uint64) (string, [][]byte, error) {
	return _BrokerData.Contract.GetCallbackMessage(&_BrokerData.CallOpts, servicePair, index)
}

// GetCallbackMessage is a free data retrieval call binding the contract method 0x46539f63.
//
// Solidity: function getCallbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataCallerSession) GetCallbackMessage(servicePair string, index uint64) (string, [][]byte, error) {
	return _BrokerData.Contract.GetCallbackMessage(&_BrokerData.CallOpts, servicePair, index)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCaller) GetCallbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getCallbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetCallbackMeta(&_BrokerData.CallOpts)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCallerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetCallbackMeta(&_BrokerData.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCaller) GetDstRollbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getDstRollbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetDstRollbackMeta(&_BrokerData.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCallerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetDstRollbackMeta(&_BrokerData.CallOpts)
}

// GetInCounter is a free data retrieval call binding the contract method 0x02b12b9a.
//
// Solidity: function getInCounter(string servicePair) view returns(uint64)
func (_BrokerData *BrokerDataCaller) GetInCounter(opts *bind.CallOpts, servicePair string) (uint64, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getInCounter", servicePair)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// GetInCounter is a free data retrieval call binding the contract method 0x02b12b9a.
//
// Solidity: function getInCounter(string servicePair) view returns(uint64)
func (_BrokerData *BrokerDataSession) GetInCounter(servicePair string) (uint64, error) {
	return _BrokerData.Contract.GetInCounter(&_BrokerData.CallOpts, servicePair)
}

// GetInCounter is a free data retrieval call binding the contract method 0x02b12b9a.
//
// Solidity: function getInCounter(string servicePair) view returns(uint64)
func (_BrokerData *BrokerDataCallerSession) GetInCounter(servicePair string) (uint64, error) {
	return _BrokerData.Contract.GetInCounter(&_BrokerData.CallOpts, servicePair)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCaller) GetInnerMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getInnerMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataSession) GetInnerMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetInnerMeta(&_BrokerData.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCallerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetInnerMeta(&_BrokerData.CallOpts)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_BrokerData *BrokerDataCaller) GetOutMessage(opts *bind.CallOpts, outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getOutMessage", outServicePair, idx)

	if err != nil {
		return *new(string), *new([][]byte), *new(bool), *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)
	out3 := *abi.ConvertType(out[3], new([]string)).(*[]string)

	return out0, out1, out2, out3, err

}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_BrokerData *BrokerDataSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	return _BrokerData.Contract.GetOutMessage(&_BrokerData.CallOpts, outServicePair, idx)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(string, bytes[], bool, string[])
func (_BrokerData *BrokerDataCallerSession) GetOutMessage(outServicePair string, idx uint64) (string, [][]byte, bool, []string, error) {
	return _BrokerData.Contract.GetOutMessage(&_BrokerData.CallOpts, outServicePair, idx)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCaller) GetOuterMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getOuterMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataSession) GetOuterMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetOuterMeta(&_BrokerData.CallOpts)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_BrokerData *BrokerDataCallerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _BrokerData.Contract.GetOuterMeta(&_BrokerData.CallOpts)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_BrokerData *BrokerDataCaller) GetReceiptMessage(opts *bind.CallOpts, inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getReceiptMessage", inServicePair, idx)

	if err != nil {
		return *new([][][]byte), *new(uint64), *new(bool), *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([][][]byte)).(*[][][]byte)
	out1 := *abi.ConvertType(out[1], new(uint64)).(*uint64)
	out2 := *abi.ConvertType(out[2], new(bool)).(*bool)
	out3 := *abi.ConvertType(out[3], new([]bool)).(*[]bool)

	return out0, out1, out2, out3, err

}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_BrokerData *BrokerDataSession) GetReceiptMessage(inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	return _BrokerData.Contract.GetReceiptMessage(&_BrokerData.CallOpts, inServicePair, idx)
}

// GetReceiptMessage is a free data retrieval call binding the contract method 0xca6954da.
//
// Solidity: function getReceiptMessage(string inServicePair, uint64 idx) view returns(bytes[][], uint64, bool, bool[])
func (_BrokerData *BrokerDataCallerSession) GetReceiptMessage(inServicePair string, idx uint64) ([][][]byte, uint64, bool, []bool, error) {
	return _BrokerData.Contract.GetReceiptMessage(&_BrokerData.CallOpts, inServicePair, idx)
}

// GetRollbackMessage is a free data retrieval call binding the contract method 0x7e88e0ff.
//
// Solidity: function getRollbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataCaller) GetRollbackMessage(opts *bind.CallOpts, servicePair string, index uint64) (string, [][]byte, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "getRollbackMessage", servicePair, index)

	if err != nil {
		return *new(string), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new([][]byte)).(*[][]byte)

	return out0, out1, err

}

// GetRollbackMessage is a free data retrieval call binding the contract method 0x7e88e0ff.
//
// Solidity: function getRollbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataSession) GetRollbackMessage(servicePair string, index uint64) (string, [][]byte, error) {
	return _BrokerData.Contract.GetRollbackMessage(&_BrokerData.CallOpts, servicePair, index)
}

// GetRollbackMessage is a free data retrieval call binding the contract method 0x7e88e0ff.
//
// Solidity: function getRollbackMessage(string servicePair, uint64 index) view returns(string, bytes[])
func (_BrokerData *BrokerDataCallerSession) GetRollbackMessage(servicePair string, index uint64) (string, [][]byte, error) {
	return _BrokerData.Contract.GetRollbackMessage(&_BrokerData.CallOpts, servicePair, index)
}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_BrokerData *BrokerDataCaller) StringToAddress(opts *bind.CallOpts, _address string) (common.Address, error) {
	var out []interface{}
	err := _BrokerData.contract.Call(opts, &out, "stringToAddress", _address)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_BrokerData *BrokerDataSession) StringToAddress(_address string) (common.Address, error) {
	return _BrokerData.Contract.StringToAddress(&_BrokerData.CallOpts, _address)
}

// StringToAddress is a free data retrieval call binding the contract method 0x15706fdf.
//
// Solidity: function stringToAddress(string _address) pure returns(address)
func (_BrokerData *BrokerDataCallerSession) StringToAddress(_address string) (common.Address, error) {
	return _BrokerData.Contract.StringToAddress(&_BrokerData.CallOpts, _address)
}

// CheckInterchainMultiSigns is a paid mutator transaction binding the contract method 0xa96d7211.
//
// Solidity: function checkInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactor) CheckInterchainMultiSigns(opts *bind.TransactOpts, srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "checkInterchainMultiSigns", srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckInterchainMultiSigns is a paid mutator transaction binding the contract method 0xa96d7211.
//
// Solidity: function checkInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataSession) CheckInterchainMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckInterchainMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckInterchainMultiSigns is a paid mutator transaction binding the contract method 0xa96d7211.
//
// Solidity: function checkInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactorSession) CheckInterchainMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckInterchainMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckMultiInterchainMultiSigns is a paid mutator transaction binding the contract method 0x15f4753a.
//
// Solidity: function checkMultiInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactor) CheckMultiInterchainMultiSigns(opts *bind.TransactOpts, srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "checkMultiInterchainMultiSigns", srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckMultiInterchainMultiSigns is a paid mutator transaction binding the contract method 0x15f4753a.
//
// Solidity: function checkMultiInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataSession) CheckMultiInterchainMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckMultiInterchainMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckMultiInterchainMultiSigns is a paid mutator transaction binding the contract method 0x15f4753a.
//
// Solidity: function checkMultiInterchainMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, string callFunc, bytes[][] args, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactorSession) CheckMultiInterchainMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, callFunc string, args [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckMultiInterchainMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, callFunc, args, txStatus, multiSignatures, validators, valThreshold)
}

// CheckReceiptMultiSigns is a paid mutator transaction binding the contract method 0x3fb7a83c.
//
// Solidity: function checkReceiptMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, bytes[][] result, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactor) CheckReceiptMultiSigns(opts *bind.TransactOpts, srcFullID string, dstFullID string, index uint64, typ uint64, result [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "checkReceiptMultiSigns", srcFullID, dstFullID, index, typ, result, txStatus, multiSignatures, validators, valThreshold)
}

// CheckReceiptMultiSigns is a paid mutator transaction binding the contract method 0x3fb7a83c.
//
// Solidity: function checkReceiptMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, bytes[][] result, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataSession) CheckReceiptMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, result [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckReceiptMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, result, txStatus, multiSignatures, validators, valThreshold)
}

// CheckReceiptMultiSigns is a paid mutator transaction binding the contract method 0x3fb7a83c.
//
// Solidity: function checkReceiptMultiSigns(string srcFullID, string dstFullID, uint64 index, uint64 typ, bytes[][] result, uint64 txStatus, bytes[] multiSignatures, address[] validators, uint64 valThreshold) returns(bool)
func (_BrokerData *BrokerDataTransactorSession) CheckReceiptMultiSigns(srcFullID string, dstFullID string, index uint64, typ uint64, result [][][]byte, txStatus uint64, multiSignatures [][]byte, validators []common.Address, valThreshold uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.CheckReceiptMultiSigns(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, typ, result, txStatus, multiSignatures, validators, valThreshold)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_BrokerData *BrokerDataTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_BrokerData *BrokerDataSession) Initialize() (*types.Transaction, error) {
	return _BrokerData.Contract.Initialize(&_BrokerData.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_BrokerData *BrokerDataTransactorSession) Initialize() (*types.Transaction, error) {
	return _BrokerData.Contract.Initialize(&_BrokerData.TransactOpts)
}

// InvokeIndexUpdate is a paid mutator transaction binding the contract method 0x2fae0531.
//
// Solidity: function invokeIndexUpdate(string srcFullID, string dstFullID, uint64 index, uint64 reqType) returns(bool)
func (_BrokerData *BrokerDataTransactor) InvokeIndexUpdate(opts *bind.TransactOpts, srcFullID string, dstFullID string, index uint64, reqType uint64) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "invokeIndexUpdate", srcFullID, dstFullID, index, reqType)
}

// InvokeIndexUpdate is a paid mutator transaction binding the contract method 0x2fae0531.
//
// Solidity: function invokeIndexUpdate(string srcFullID, string dstFullID, uint64 index, uint64 reqType) returns(bool)
func (_BrokerData *BrokerDataSession) InvokeIndexUpdate(srcFullID string, dstFullID string, index uint64, reqType uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.InvokeIndexUpdate(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, reqType)
}

// InvokeIndexUpdate is a paid mutator transaction binding the contract method 0x2fae0531.
//
// Solidity: function invokeIndexUpdate(string srcFullID, string dstFullID, uint64 index, uint64 reqType) returns(bool)
func (_BrokerData *BrokerDataTransactorSession) InvokeIndexUpdate(srcFullID string, dstFullID string, index uint64, reqType uint64) (*types.Transaction, error) {
	return _BrokerData.Contract.InvokeIndexUpdate(&_BrokerData.TransactOpts, srcFullID, dstFullID, index, reqType)
}

// MarkOutCounter is a paid mutator transaction binding the contract method 0x3edc6d7c.
//
// Solidity: function markOutCounter(string servicePair) returns(uint64)
func (_BrokerData *BrokerDataTransactor) MarkOutCounter(opts *bind.TransactOpts, servicePair string) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "markOutCounter", servicePair)
}

// MarkOutCounter is a paid mutator transaction binding the contract method 0x3edc6d7c.
//
// Solidity: function markOutCounter(string servicePair) returns(uint64)
func (_BrokerData *BrokerDataSession) MarkOutCounter(servicePair string) (*types.Transaction, error) {
	return _BrokerData.Contract.MarkOutCounter(&_BrokerData.TransactOpts, servicePair)
}

// MarkOutCounter is a paid mutator transaction binding the contract method 0x3edc6d7c.
//
// Solidity: function markOutCounter(string servicePair) returns(uint64)
func (_BrokerData *BrokerDataTransactorSession) MarkOutCounter(servicePair string) (*types.Transaction, error) {
	return _BrokerData.Contract.MarkOutCounter(&_BrokerData.TransactOpts, servicePair)
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_BrokerData *BrokerDataTransactor) Register(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "register")
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_BrokerData *BrokerDataSession) Register() (*types.Transaction, error) {
	return _BrokerData.Contract.Register(&_BrokerData.TransactOpts)
}

// Register is a paid mutator transaction binding the contract method 0x1aa3a008.
//
// Solidity: function register() returns()
func (_BrokerData *BrokerDataTransactorSession) Register() (*types.Transaction, error) {
	return _BrokerData.Contract.Register(&_BrokerData.TransactOpts)
}

// SetOutMessage is a paid mutator transaction binding the contract method 0x3a92472b.
//
// Solidity: function setOutMessage(string servicePair, bool isEncrypt, string[] group, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb) returns()
func (_BrokerData *BrokerDataTransactor) SetOutMessage(opts *bind.TransactOpts, servicePair string, isEncrypt bool, group []string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "setOutMessage", servicePair, isEncrypt, group, funcCall, args, funcCb, argsCb, funcRb, argsRb)
}

// SetOutMessage is a paid mutator transaction binding the contract method 0x3a92472b.
//
// Solidity: function setOutMessage(string servicePair, bool isEncrypt, string[] group, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb) returns()
func (_BrokerData *BrokerDataSession) SetOutMessage(servicePair string, isEncrypt bool, group []string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte) (*types.Transaction, error) {
	return _BrokerData.Contract.SetOutMessage(&_BrokerData.TransactOpts, servicePair, isEncrypt, group, funcCall, args, funcCb, argsCb, funcRb, argsRb)
}

// SetOutMessage is a paid mutator transaction binding the contract method 0x3a92472b.
//
// Solidity: function setOutMessage(string servicePair, bool isEncrypt, string[] group, string funcCall, bytes[] args, string funcCb, bytes[] argsCb, string funcRb, bytes[] argsRb) returns()
func (_BrokerData *BrokerDataTransactorSession) SetOutMessage(servicePair string, isEncrypt bool, group []string, funcCall string, args [][]byte, funcCb string, argsCb [][]byte, funcRb string, argsRb [][]byte) (*types.Transaction, error) {
	return _BrokerData.Contract.SetOutMessage(&_BrokerData.TransactOpts, servicePair, isEncrypt, group, funcCall, args, funcCb, argsCb, funcRb, argsRb)
}

// SetReceiptMessage is a paid mutator transaction binding the contract method 0x1f42ed99.
//
// Solidity: function setReceiptMessage(string servicePair, uint64 index, bool isEncrypt, uint64 typ, bytes[][] results, bool[] multiStatus) returns()
func (_BrokerData *BrokerDataTransactor) SetReceiptMessage(opts *bind.TransactOpts, servicePair string, index uint64, isEncrypt bool, typ uint64, results [][][]byte, multiStatus []bool) (*types.Transaction, error) {
	return _BrokerData.contract.Transact(opts, "setReceiptMessage", servicePair, index, isEncrypt, typ, results, multiStatus)
}

// SetReceiptMessage is a paid mutator transaction binding the contract method 0x1f42ed99.
//
// Solidity: function setReceiptMessage(string servicePair, uint64 index, bool isEncrypt, uint64 typ, bytes[][] results, bool[] multiStatus) returns()
func (_BrokerData *BrokerDataSession) SetReceiptMessage(servicePair string, index uint64, isEncrypt bool, typ uint64, results [][][]byte, multiStatus []bool) (*types.Transaction, error) {
	return _BrokerData.Contract.SetReceiptMessage(&_BrokerData.TransactOpts, servicePair, index, isEncrypt, typ, results, multiStatus)
}

// SetReceiptMessage is a paid mutator transaction binding the contract method 0x1f42ed99.
//
// Solidity: function setReceiptMessage(string servicePair, uint64 index, bool isEncrypt, uint64 typ, bytes[][] results, bool[] multiStatus) returns()
func (_BrokerData *BrokerDataTransactorSession) SetReceiptMessage(servicePair string, index uint64, isEncrypt bool, typ uint64, results [][][]byte, multiStatus []bool) (*types.Transaction, error) {
	return _BrokerData.Contract.SetReceiptMessage(&_BrokerData.TransactOpts, servicePair, index, isEncrypt, typ, results, multiStatus)
}
