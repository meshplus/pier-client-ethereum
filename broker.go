// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package main

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BrokerABI is the input ABI used to generate the binding from.
const BrokerABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_bxhID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_appchainID\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dstFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"srcFullID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"funcs\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"args\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"argscb\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"argsrb\",\"type\":\"string\"}],\"name\":\"throwEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addressToString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"asciiString\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"status\",\"type\":\"int64\"}],\"name\":\"audit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"destChainServiceID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"funcs\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"args\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"argscb\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"argsrb\",\"type\":\"string\"}],\"name\":\"emitInterchainEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceID\",\"type\":\"string\"}],\"name\":\"genFullServiceID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDstRollbackMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"inServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getInMessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInnerMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"outServicePair\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"idx\",\"type\":\"uint64\"}],\"name\":\"getOutMessage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOuterMeta\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcChainServiceID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"destAddr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"reqType\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"name\":\"invokeIndexUpdateWithError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"srcChainServiceID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"index\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"destAddr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"reqType\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"bizCallData\",\"type\":\"bytes\"}],\"name\":\"invokeInterchain\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// BrokerFuncSigs maps the 4-byte function signature to its string representation.
var BrokerFuncSigs = map[string]string{
	"5e57966d": "addressToString(address)",
	"b38ff85f": "audit(address,int64)",
	"b508c8d4": "emitInterchainEvent(string,string,string,string,string)",
	"32358c6d": "genFullServiceID(string)",
	"3b6bbe4a": "getCallbackMeta()",
	"564b81ef": "getChainID()",
	"ed63513f": "getDstRollbackMeta()",
	"31942306": "getInMessage(string,uint64)",
	"67b9fa3b": "getInnerMeta()",
	"29793e6e": "getOutMessage(string,uint64)",
	"c20cab50": "getOuterMeta()",
	"8129fc1c": "initialize()",
	"a8a9c39f": "invokeIndexUpdateWithError(string,uint64,address,uint64,string)",
	"3acedf30": "invokeInterchain(string,uint64,address,uint64,bytes)",
	"4420e486": "register(address)",
}

// BrokerBin is the compiled bytecode used for deploying new contracts.
var BrokerBin = "0x60806040523480156200001157600080fd5b5060405162002636380380620026368339810160408190526200003491620001ab565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000212565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000ab57805160ff1916838001178555620000db565b82800160010185558215620000db579182015b82811115620000db578251825591602001919060010190620000be565b50620000e9929150620000ed565b5090565b5b80821115620000e95760008155600101620000ee565b600082601f83011262000115578081fd5b81516001600160401b03808211156200012c578283fd5b6040516020601f8401601f19168201810183811183821017156200014e578586fd5b806040525081945083825286818588010111156200016b57600080fd5b600092505b838310156200018f578583018101518284018201529182019162000170565b83831115620001a15760008185840101525b5050505092915050565b60008060408385031215620001be578182fd5b82516001600160401b0380821115620001d5578384fd5b620001e38683870162000104565b93506020850151915080821115620001f9578283fd5b50620002088582860162000104565b9150509250929050565b61241480620002226000396000f3fe6080604052600436106100e85760003560e01c80635e57966d1161008a578063b38ff85f11610059578063b38ff85f14610255578063b508c8d414610282578063c20cab50146102a2578063ed63513f146102b7576100e8565b80635e57966d146101eb57806367b9fa3b1461020b5780638129fc1c14610220578063a8a9c39f14610235576100e8565b80633acedf30116100c65780633acedf30146101705780633b6bbe4a146101855780634420e486146101a8578063564b81ef146101c8576100e8565b806329793e6e146100ed578063319423061461012357806332358c6d14610143575b600080fd5b3480156100f957600080fd5b5061010d610108366004612045565b6102cc565b60405161011a91906122fe565b60405180910390f35b34801561012f57600080fd5b5061010d61013e366004612045565b61030c565b34801561014f57600080fd5b5061016361015e366004611f48565b61031e565b60405161011a9190612286565b61018361017e366004611ea4565b61047e565b005b34801561019157600080fd5b5061019a61053b565b60405161011a9291906121d7565b3480156101b457600080fd5b506101836101c3366004611e40565b6106f8565b3480156101d457600080fd5b506101dd610720565b60405161011a929190612299565b3480156101f757600080fd5b50610163610206366004611e40565b61084f565b34801561021757600080fd5b5061019a6109b8565b34801561022c57600080fd5b50610183610b52565b34801561024157600080fd5b50610183610250366004612089565b610da0565b34801561026157600080fd5b50610275610270366004611e5b565b610db4565b60405161011a919061227b565b34801561028e57600080fd5b5061018361029d366004611f7a565b610e84565b3480156102ae57600080fd5b5061019a611066565b3480156102c357600080fd5b5061019a611214565b60006009836040516102de9190612148565b90815260408051602092819003830190206001600160401b0385166000908152925290205490505b92915050565b6000600b836040516102de9190612148565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815260609384936103e2936103bb9392918301828280156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b50505050506113ae565b6103dd604051806040016040528060018152602001601d60f91b8152506113ae565b6113d3565b90506104526103f0826113ae565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526103dd93909290918301828280156103b15780601f10610386576101008083540402835291602001916103b1565b90506104606103bb826113ae565b905061047761046e826113ae565b6103dd856113ae565b9392505050565b6001600160a01b038416600090815260208190526040902054600790810b900b6001146104aa57600080fd5b6104fb87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081528a9350899250889150611459565b604051602060848237805160208160040183378151808260240184376000808285348b5af19150503d806000843e818015610537578184a08184f35b8184fd5b60608060606007805490506001600160401b038111801561055b57600080fd5b50604051908082528060200260200182016040528015610585578160200160208202803683370190505b50905060005b6007546001600160401b038216101561061957600c6007826001600160401b0316815481106105b657fe5b906000526020600020016040516105cd9190612164565b9081526040519081900360200190205482516001600160401b039182169184919084169081106105f957fe5b6001600160401b039092166020928302919091019091015260010161058b565b5060078181805480602002602001604051908101604052809291908181526020016000905b828210156106e95760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156106d55780601f106106aa576101008083540402835291602001916106d5565b820191906000526020600020905b8154815290600101906020018083116106b857829003601f168201915b50505050508152602001906001019061063e565b50505050915092509250509091565b6001600160a01b03166000908152602081905260409020805467ffffffffffffffff19169055565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093849390926004929184918301828280156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b50505050509050915091509091565b604080516028808252606082810190935283831b918391602082018180368337019050509050600080600080600080610886611c01565b61088f8b6116b7565b905060005b6014811015610979578060130360080260020a8a60601c6001600160a01b0316816108bb57fe5b049750601060ff891604965086601002880395508181600202602881106108de57fe5b602002015194508181600202600101602881106108f757fe5b6020020151935061090887866117ec565b925082870160f81b89826002028151811061091f57fe5b60200101906001600160f81b031916908160001a90535061094086856117ec565b925082860160f81b89826002026001018151811061095a57fe5b60200101906001600160f81b031916908160001a905350600101610894565b506109a96109a060405180604001604052806002815260200161060f60f31b8152506113ae565b6103dd8a6113ae565b9b9a5050505050505050505050565b60608060606006805490506001600160401b03811180156109d857600080fd5b50604051908082528060200260200182016040528015610a02578160200160208202803683370190505b50905060005b600654811015610a8257600a60068281548110610a2157fe5b90600052602060002001604051610a389190612164565b9081526040519081900360200190205482516001600160401b0390911690839083908110610a6257fe5b6001600160401b0390921660209283029190910190910152600101610a08565b5060068181805480602002602001604051908101604052809291908181526020016000905b828210156106e95760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610b3e5780601f10610b1357610100808354040283529160200191610b3e565b820191906000526020600020905b815481529060010190602001808311610b2157829003601f168201915b505050505081526020019060010190610aa7565b60005b600654811015610bbf576000600a60068381548110610b7057fe5b90600052602060002001604051610b879190612164565b90815260405190819003602001902080546001600160401b039290921667ffffffffffffffff19909216919091179055600101610b55565b5060005b600554811015610c2d576000600860058381548110610bde57fe5b90600052602060002001604051610bf59190612164565b90815260405190819003602001902080546001600160401b039290921667ffffffffffffffff19909216919091179055600101610bc3565b5060005b600754811015610c9b576000600c60078381548110610c4c57fe5b90600052602060002001604051610c639190612164565b90815260405190819003602001902080546001600160401b039290921667ffffffffffffffff19909216919091179055600101610c31565b5060005b600654811015610d09576000600f60068381548110610cba57fe5b90600052602060002001604051610cd19190612164565b90815260405190819003602001902080546001600160401b039290921667ffffffffffffffff19909216919091179055600101610c9f565b5060005b600154811015610d7957600080600060018481548110610d2957fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020805460079290920b6001600160401b031667ffffffffffffffff19909216919091179055600101610d0d565b50610d8660056000611c20565b610d9260066000611c20565b610d9e60076000611c20565b565b610dad8585858585611459565b5050505050565b60008160070b60001914158015610dcf57508160070b600014155b8015610ddf57508160070b600114155b15610dec57506000610306565b6001600160a01b0383166000908152602081905260409020805467ffffffffffffffff19166001600160401b03600785900b9081169190911790915560011415610e7b576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385161790555b50600192915050565b33600090815260208190526040902054600790810b900b600114610ec35760405162461bcd60e51b8152600401610eba906122c7565b60405180910390fd5b6060610ed161015e3361084f565b90506060610edf8288611819565b9050600881604051610ef19190612148565b90815260405190819003602001812080546001600160401b038082166001011667ffffffffffffffff19909116179055600890610f2f908390612148565b908152604051908190036020019020546001600160401b031660011415610f9557600580546001810182556000919091528151610f93917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001906020840190611c41565b505b43600982604051610fa69190612148565b90815260200160405180910390206000600884604051610fc69190612148565b9081526040805160209281900383019020546001600160401b0316835290820192909252810160002091909155517f622685c5770aa3feb985fe18cd9788e4a3fe85aacaed75bbc57214fb18c8e59890600890611024908490612148565b90815260405190819003602001812054611055916001600160401b03909116908a9086908b908b908b908b90612307565b60405180910390a150505050505050565b60608060606005805490506001600160401b038111801561108657600080fd5b506040519080825280602002602001820160405280156110b0578160200160208202803683370190505b50905060005b6005546001600160401b03821610156111445760086005826001600160401b0316815481106110e157fe5b906000526020600020016040516110f89190612164565b9081526040519081900360200190205482516001600160401b0391821691849190841690811061112457fe5b6001600160401b03909216602092830291909101909101526001016110b6565b5060058181805480602002602001604051908101604052809291908181526020016000905b828210156106e95760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b505050505081526020019060010190611169565b60608060606006805490506001600160401b038111801561123457600080fd5b5060405190808252806020026020018201604052801561125e578160200160208202803683370190505b50905060005b6006548110156112de57600f6006828154811061127d57fe5b906000526020600020016040516112949190612164565b9081526040519081900360200190205482516001600160401b03909116908390839081106112be57fe5b6001600160401b0390921660209283029190910190910152600101611264565b5060068181805480602002602001604051908101604052809291908181526020016000905b828210156106e95760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561139a5780601f1061136f5761010080835404028352916020019161139a565b820191906000526020600020905b81548152906001019060200180831161137d57829003601f168201915b505050505081526020019060010190611303565b6113b6611cbf565b506040805180820190915281518152602082810190820152919050565b805182516060918291016001600160401b03811180156113f257600080fd5b506040519080825280601f01601f19166020018201604052801561141d576020820181803683370190505b509050600060208201905061143b8186602001518760000151611860565b8451602085015185516114519284019190611860565b509392505050565b606061146761015e8561084f565b90506001600160401b0383166115715760606114838783611819565b9050856001600160401b0316600a8260405161149f9190612148565b908152604051908190036020019020546001600160401b0390811660010116146114c857600080fd5b6114d18161189e565b6040516020016114e0906121d4565b60405160208183030381529060405280519060200120836040516020016115079190612148565b604051602081830303815290604052805190602001201461156b5782600d826040516115339190612148565b90815260408051602092819003830190206001600160401b038a1660009081529083522082516115699391929190910190611c41565b505b506116af565b826001600160401b03166001141561164057606061158f8288611819565b9050856001600160401b0316600c826040516115ab9190612148565b908152604051908190036020019020546001600160401b0390811660010116146115d457600080fd5b6115de81876119af565b6040516020016115ed906121d4565b60405160208183030381529060405280519060200120836040516020016116149190612148565b604051602081830303815290604052805190602001201461156b5782600e826040516115339190612148565b826001600160401b0316600214156116af57606061165e8783611819565b9050856001600160401b0316600f8260405161167a9190612148565b908152604051908190036020019020546001600160401b0390811660010116146116a357600080fd5b6116ad8187611ac2565b505b505050505050565b6116bf611c01565b606082901b60006116cf82611b07565b6040516020016116df9190612148565b60405160208183030381529060405280519060200120905060008060008060005b60148110156117e057601087826014811061171757fe5b1a8161171f57fe5b06935060108488836014811061173157fe5b1a0360ff168161173d57fe5b049450601086826020811061174e57fe5b1a8161175657fe5b06915060108287836020811061176857fe5b1a0360ff168161177457fe5b04925060098560ff1611801561178d575060078360ff16115b88826002026028811061179c57fe5b91151560209092020152600960ff85161180156117bc575060078260ff16115b8882600202600101602881106117ce57fe5b91151560209092020152600101611700565b50505050505050919050565b6000600a8360ff16101561180257506030610306565b811561181057506037610306565b50605792915050565b60608061184a611828856113ae565b6103dd604051806040016040528060018152602001602d60f81b8152506113ae565b905061185861046e826113ae565b949350505050565b5b60208110611880578151835260209283019290910190601f1901611861565b905182516020929092036101000a6000190180199091169116179052565b600a816040516118ae9190612148565b90815260405190819003602001812080546001600160401b038082166001011667ffffffffffffffff19909116179055600a906118ec908390612148565b908152604051908190036020019020546001600160401b03166001141561195257600680546001810182556000919091528151611950917ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01906020840190611c41565b505b43600b826040516119639190612148565b90815260200160405180910390206000600a846040516119839190612148565b9081526040805160209281900383019020546001600160401b0316835290820192909252016000205550565b600c826040516119bf9190612148565b908152604051908190036020019020546001600160401b0316611a2157600780546001810182556000919091528251611a1f917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801906020850190611c41565b505b80600c83604051611a329190612148565b908152602001604051809103902060006101000a8154816001600160401b0302191690836001600160401b0316021790555043600b83604051611a759190612148565b90815260200160405180910390206000600c85604051611a959190612148565b9081526040805160209281900383019020546001600160401b031683529082019290925201600020555050565b80600f83604051611ad39190612148565b90815260405190819003602001902080546001600160401b039290921667ffffffffffffffff199092169190911790555050565b604080516028808252606082810190935282919060208201818036833701905050905060008080805b6014811015611bf6578060130360080260020a8760601c6001600160a01b031681611b5757fe5b049350601060ff85160492508260100284039150600a8360ff1610611b7d576057611b80565b60305b830160f81b858260020281518110611b9457fe5b60200101906001600160f81b031916908160001a905350600a8260ff1610611bbd576057611bc0565b60305b820160f81b858260020260010181518110611bd757fe5b60200101906001600160f81b031916908160001a905350600101611b30565b509295945050505050565b6040518061050001604052806028906020820280368337509192915050565b5080546000825590600052602060002090810190611c3e9190611cd9565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c8257805160ff1916838001178555611caf565b82800160010185558215611caf579182015b82811115611caf578251825591602001919060010190611c94565b50611cbb929150611cf6565b5090565b604051806040016040528060008152602001600081525090565b80821115611cbb576000611ced8282611d0b565b50600101611cd9565b5b80821115611cbb5760008155600101611cf7565b50805460018160011615610100020316600290046000825580601f10611d315750611c3e565b601f016020900490600052602060002090810190611c3e9190611cf6565b80356001600160a01b038116811461030657600080fd5b60008083601f840112611d77578182fd5b5081356001600160401b03811115611d8d578182fd5b602083019150836020828501011115611da557600080fd5b9250929050565b600082601f830112611dbc578081fd5b81356001600160401b0380821115611dd2578283fd5b604051601f8301601f191681016020018281118282101715611df2578485fd5b604052828152925082848301602001861015611e0d57600080fd5b8260208601602083013760006020848301015250505092915050565b80356001600160401b038116811461030657600080fd5b600060208284031215611e51578081fd5b6104778383611d4f565b60008060408385031215611e6d578081fd5b82356001600160a01b0381168114611e83578182fd5b91506020830135600781900b8114611e99578182fd5b809150509250929050565b600080600080600080600060a0888a031215611ebe578283fd5b87356001600160401b0380821115611ed4578485fd5b611ee08b838c01611d66565b9099509750879150611ef58b60208c01611e29565b9650611f048b60408c01611d4f565b9550611f138b60608c01611e29565b945060808a0135915080821115611f28578384fd5b50611f358a828b01611d66565b989b979a50959850939692959293505050565b600060208284031215611f59578081fd5b81356001600160401b03811115611f6e578182fd5b61185884828501611dac565b600080600080600060a08688031215611f91578081fd5b85356001600160401b0380821115611fa7578283fd5b611fb389838a01611dac565b96506020880135915080821115611fc8578283fd5b611fd489838a01611dac565b95506040880135915080821115611fe9578283fd5b611ff589838a01611dac565b9450606088013591508082111561200a578283fd5b61201689838a01611dac565b9350608088013591508082111561202b578283fd5b5061203888828901611dac565b9150509295509295909350565b60008060408385031215612057578182fd5b82356001600160401b0381111561206c578283fd5b61207885828601611dac565b9250506020830135611e99816123c9565b600080600080600060a086880312156120a0578081fd5b85356001600160401b03808211156120b6578283fd5b6120c289838a01611dac565b9650602088013591506120d4826123c9565b8195506120e48960408a01611d4f565b9450606088013591506120f6826123c9565b9092506080870135908082111561202b578283fd5b6001600160401b0316815260200190565b60008151808452612134816020860160208601612399565b601f01601f19169290920160200192915050565b6000825161215a818460208701612399565b9190910192915050565b6000808354600180821660008114612183576001811461219a576121c9565b60ff198316865260028304607f16860193506121c9565b600283048786526020808720875b838110156121c15781548a8201529085019082016121a8565b505050860193505b509195945050505050565b90565b600060408201604083528085516121ee81846122fe565b915081925060208082028301818901865b8481101561222957868303865261221783835161211c565b958401959250908301906001016121ff565b5050868103828801528094508751935061224384826122fe565b9450508087019150845b8381101561226e5761226085845161210b565b94509181019160010161224d565b5092979650505050505050565b901515815260200190565b600060208252610477602083018461211c565b6000604082526122ac604083018561211c565b82810360208401526122be818561211c565b95945050505050565b6020808252601d908201527f496e766f6b657220617265206e6f7420696e207768697465206c697374000000604082015260600190565b90815260200190565b60006001600160401b038916825260e0602083015261232960e083018961211c565b828103604084015261233b818961211c565b9050828103606084015261234f818861211c565b90508281036080840152612363818761211c565b905082810360a0840152612377818661211c565b905082810360c084015261238b818561211c565b9a9950505050505050505050565b60005b838110156123b457818101518382015260200161239c565b838111156123c3576000848401525b50505050565b6001600160401b0381168114611c3e57600080fdfea264697066735822122004de7225f8ac69ca974c45849483a4598df7b0866d6c70fed3467b33cffd7bc464736f6c634300060c0033"

// DeployBroker deploys a new Ethereum contract, binding an instance of Broker to it.
func DeployBroker(auth *bind.TransactOpts, backend bind.ContractBackend, _bxhID string, _appchainID string) (common.Address, *types.Transaction, *Broker, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BrokerBin), backend, _bxhID, _appchainID)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// Broker is an auto generated Go binding around an Ethereum contract.
type Broker struct {
	BrokerCaller     // Read-only binding to the contract
	BrokerTransactor // Write-only binding to the contract
	BrokerFilterer   // Log filterer for contract events
}

// BrokerCaller is an auto generated read-only Go binding around an Ethereum contract.
type BrokerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BrokerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BrokerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BrokerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BrokerSession struct {
	Contract     *Broker           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BrokerCallerSession struct {
	Contract *BrokerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// BrokerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BrokerTransactorSession struct {
	Contract     *BrokerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BrokerRaw is an auto generated low-level Go binding around an Ethereum contract.
type BrokerRaw struct {
	Contract *Broker // Generic contract binding to access the raw methods on
}

// BrokerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BrokerCallerRaw struct {
	Contract *BrokerCaller // Generic read-only contract binding to access the raw methods on
}

// BrokerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BrokerTransactorRaw struct {
	Contract *BrokerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBroker creates a new instance of Broker, bound to a specific deployed contract.
func NewBroker(address common.Address, backend bind.ContractBackend) (*Broker, error) {
	contract, err := bindBroker(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Broker{BrokerCaller: BrokerCaller{contract: contract}, BrokerTransactor: BrokerTransactor{contract: contract}, BrokerFilterer: BrokerFilterer{contract: contract}}, nil
}

// NewBrokerCaller creates a new read-only instance of Broker, bound to a specific deployed contract.
func NewBrokerCaller(address common.Address, caller bind.ContractCaller) (*BrokerCaller, error) {
	contract, err := bindBroker(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerCaller{contract: contract}, nil
}

// NewBrokerTransactor creates a new write-only instance of Broker, bound to a specific deployed contract.
func NewBrokerTransactor(address common.Address, transactor bind.ContractTransactor) (*BrokerTransactor, error) {
	contract, err := bindBroker(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BrokerTransactor{contract: contract}, nil
}

// NewBrokerFilterer creates a new log filterer instance of Broker, bound to a specific deployed contract.
func NewBrokerFilterer(address common.Address, filterer bind.ContractFilterer) (*BrokerFilterer, error) {
	contract, err := bindBroker(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BrokerFilterer{contract: contract}, nil
}

// bindBroker binds a generic wrapper to an already deployed contract.
func bindBroker(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BrokerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.BrokerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.BrokerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Broker *BrokerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Broker.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Broker *BrokerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Broker *BrokerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Broker.Contract.contract.Transact(opts, method, params...)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerCaller) AddressToString(opts *bind.CallOpts, account common.Address) (string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "addressToString", account)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerSession) AddressToString(account common.Address) (string, error) {
	return _Broker.Contract.AddressToString(&_Broker.CallOpts, account)
}

// AddressToString is a free data retrieval call binding the contract method 0x5e57966d.
//
// Solidity: function addressToString(address account) pure returns(string asciiString)
func (_Broker *BrokerCallerSession) AddressToString(account common.Address) (string, error) {
	return _Broker.Contract.AddressToString(&_Broker.CallOpts, account)
}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerCaller) GenFullServiceID(opts *bind.CallOpts, serviceID string) (string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "genFullServiceID", serviceID)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerSession) GenFullServiceID(serviceID string) (string, error) {
	return _Broker.Contract.GenFullServiceID(&_Broker.CallOpts, serviceID)
}

// GenFullServiceID is a free data retrieval call binding the contract method 0x32358c6d.
//
// Solidity: function genFullServiceID(string serviceID) view returns(string)
func (_Broker *BrokerCallerSession) GenFullServiceID(serviceID string) (string, error) {
	return _Broker.Contract.GenFullServiceID(&_Broker.CallOpts, serviceID)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetCallbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getCallbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetCallbackMeta is a free data retrieval call binding the contract method 0x3b6bbe4a.
//
// Solidity: function getCallbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetCallbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetCallbackMeta(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCaller) GetChainID(opts *bind.CallOpts) (string, string, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getChainID")

	if err != nil {
		return *new(string), *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)

	return out0, out1, err

}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetChainID is a free data retrieval call binding the contract method 0x564b81ef.
//
// Solidity: function getChainID() view returns(string, string)
func (_Broker *BrokerCallerSession) GetChainID() (string, string, error) {
	return _Broker.Contract.GetChainID(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetDstRollbackMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getDstRollbackMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetDstRollbackMeta is a free data retrieval call binding the contract method 0xed63513f.
//
// Solidity: function getDstRollbackMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetDstRollbackMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetDstRollbackMeta(&_Broker.CallOpts)
}

// GetInMessage is a free data retrieval call binding the contract method 0x31942306.
//
// Solidity: function getInMessage(string inServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerCaller) GetInMessage(opts *bind.CallOpts, inServicePair string, idx uint64) (*big.Int, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getInMessage", inServicePair, idx)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetInMessage is a free data retrieval call binding the contract method 0x31942306.
//
// Solidity: function getInMessage(string inServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerSession) GetInMessage(inServicePair string, idx uint64) (*big.Int, error) {
	return _Broker.Contract.GetInMessage(&_Broker.CallOpts, inServicePair, idx)
}

// GetInMessage is a free data retrieval call binding the contract method 0x31942306.
//
// Solidity: function getInMessage(string inServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerCallerSession) GetInMessage(inServicePair string, idx uint64) (*big.Int, error) {
	return _Broker.Contract.GetInMessage(&_Broker.CallOpts, inServicePair, idx)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetInnerMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getInnerMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetInnerMeta is a free data retrieval call binding the contract method 0x67b9fa3b.
//
// Solidity: function getInnerMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetInnerMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetInnerMeta(&_Broker.CallOpts)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerCaller) GetOutMessage(opts *bind.CallOpts, outServicePair string, idx uint64) (*big.Int, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOutMessage", outServicePair, idx)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerSession) GetOutMessage(outServicePair string, idx uint64) (*big.Int, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOutMessage is a free data retrieval call binding the contract method 0x29793e6e.
//
// Solidity: function getOutMessage(string outServicePair, uint64 idx) view returns(uint256)
func (_Broker *BrokerCallerSession) GetOutMessage(outServicePair string, idx uint64) (*big.Int, error) {
	return _Broker.Contract.GetOutMessage(&_Broker.CallOpts, outServicePair, idx)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCaller) GetOuterMeta(opts *bind.CallOpts) ([]string, []uint64, error) {
	var out []interface{}
	err := _Broker.contract.Call(opts, &out, "getOuterMeta")

	if err != nil {
		return *new([]string), *new([]uint64), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)
	out1 := *abi.ConvertType(out[1], new([]uint64)).(*[]uint64)

	return out0, out1, err

}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// GetOuterMeta is a free data retrieval call binding the contract method 0xc20cab50.
//
// Solidity: function getOuterMeta() view returns(string[], uint64[])
func (_Broker *BrokerCallerSession) GetOuterMeta() ([]string, []uint64, error) {
	return _Broker.Contract.GetOuterMeta(&_Broker.CallOpts)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactor) Audit(opts *bind.TransactOpts, addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "audit", addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// Audit is a paid mutator transaction binding the contract method 0xb38ff85f.
//
// Solidity: function audit(address addr, int64 status) returns(bool)
func (_Broker *BrokerTransactorSession) Audit(addr common.Address, status int64) (*types.Transaction, error) {
	return _Broker.Contract.Audit(&_Broker.TransactOpts, addr, status)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xb508c8d4.
//
// Solidity: function emitInterchainEvent(string destChainServiceID, string funcs, string args, string argscb, string argsrb) returns()
func (_Broker *BrokerTransactor) EmitInterchainEvent(opts *bind.TransactOpts, destChainServiceID string, funcs string, args string, argscb string, argsrb string) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "emitInterchainEvent", destChainServiceID, funcs, args, argscb, argsrb)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xb508c8d4.
//
// Solidity: function emitInterchainEvent(string destChainServiceID, string funcs, string args, string argscb, string argsrb) returns()
func (_Broker *BrokerSession) EmitInterchainEvent(destChainServiceID string, funcs string, args string, argscb string, argsrb string) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destChainServiceID, funcs, args, argscb, argsrb)
}

// EmitInterchainEvent is a paid mutator transaction binding the contract method 0xb508c8d4.
//
// Solidity: function emitInterchainEvent(string destChainServiceID, string funcs, string args, string argscb, string argsrb) returns()
func (_Broker *BrokerTransactorSession) EmitInterchainEvent(destChainServiceID string, funcs string, args string, argscb string, argsrb string) (*types.Transaction, error) {
	return _Broker.Contract.EmitInterchainEvent(&_Broker.TransactOpts, destChainServiceID, funcs, args, argscb, argsrb)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_Broker *BrokerTransactorSession) Initialize() (*types.Transaction, error) {
	return _Broker.Contract.Initialize(&_Broker.TransactOpts)
}

// InvokeIndexUpdateWithError is a paid mutator transaction binding the contract method 0xa8a9c39f.
//
// Solidity: function invokeIndexUpdateWithError(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, string err) returns()
func (_Broker *BrokerTransactor) InvokeIndexUpdateWithError(opts *bind.TransactOpts, srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, err string) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeIndexUpdateWithError", srcChainServiceID, index, destAddr, reqType, err)
}

// InvokeIndexUpdateWithError is a paid mutator transaction binding the contract method 0xa8a9c39f.
//
// Solidity: function invokeIndexUpdateWithError(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, string err) returns()
func (_Broker *BrokerSession) InvokeIndexUpdateWithError(srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, err string) (*types.Transaction, error) {
	return _Broker.Contract.InvokeIndexUpdateWithError(&_Broker.TransactOpts, srcChainServiceID, index, destAddr, reqType, err)
}

// InvokeIndexUpdateWithError is a paid mutator transaction binding the contract method 0xa8a9c39f.
//
// Solidity: function invokeIndexUpdateWithError(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, string err) returns()
func (_Broker *BrokerTransactorSession) InvokeIndexUpdateWithError(srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, err string) (*types.Transaction, error) {
	return _Broker.Contract.InvokeIndexUpdateWithError(&_Broker.TransactOpts, srcChainServiceID, index, destAddr, reqType, err)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0x3acedf30.
//
// Solidity: function invokeInterchain(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, bytes bizCallData) payable returns()
func (_Broker *BrokerTransactor) InvokeInterchain(opts *bind.TransactOpts, srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, bizCallData []byte) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "invokeInterchain", srcChainServiceID, index, destAddr, reqType, bizCallData)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0x3acedf30.
//
// Solidity: function invokeInterchain(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, bytes bizCallData) payable returns()
func (_Broker *BrokerSession) InvokeInterchain(srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, bizCallData []byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcChainServiceID, index, destAddr, reqType, bizCallData)
}

// InvokeInterchain is a paid mutator transaction binding the contract method 0x3acedf30.
//
// Solidity: function invokeInterchain(string srcChainServiceID, uint64 index, address destAddr, uint64 reqType, bytes bizCallData) payable returns()
func (_Broker *BrokerTransactorSession) InvokeInterchain(srcChainServiceID string, index uint64, destAddr common.Address, reqType uint64, bizCallData []byte) (*types.Transaction, error) {
	return _Broker.Contract.InvokeInterchain(&_Broker.TransactOpts, srcChainServiceID, index, destAddr, reqType, bizCallData)
}

// Register is a paid mutator transaction binding the contract method 0x4420e486.
//
// Solidity: function register(address addr) returns()
func (_Broker *BrokerTransactor) Register(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _Broker.contract.Transact(opts, "register", addr)
}

// Register is a paid mutator transaction binding the contract method 0x4420e486.
//
// Solidity: function register(address addr) returns()
func (_Broker *BrokerSession) Register(addr common.Address) (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts, addr)
}

// Register is a paid mutator transaction binding the contract method 0x4420e486.
//
// Solidity: function register(address addr) returns()
func (_Broker *BrokerTransactorSession) Register(addr common.Address) (*types.Transaction, error) {
	return _Broker.Contract.Register(&_Broker.TransactOpts, addr)
}

// BrokerThrowEventIterator is returned from FilterThrowEvent and is used to iterate over the raw logs and unpacked data for ThrowEvent events raised by the Broker contract.
type BrokerThrowEventIterator struct {
	Event *BrokerThrowEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BrokerThrowEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BrokerThrowEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BrokerThrowEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BrokerThrowEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BrokerThrowEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BrokerThrowEvent represents a ThrowEvent event raised by the Broker contract.
type BrokerThrowEvent struct {
	Index     uint64
	DstFullID string
	SrcFullID string
	Funcs     string
	Args      string
	Argscb    string
	Argsrb    string
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterThrowEvent is a free log retrieval operation binding the contract event 0x622685c5770aa3feb985fe18cd9788e4a3fe85aacaed75bbc57214fb18c8e598.
//
// Solidity: event throwEvent(uint64 index, string dstFullID, string srcFullID, string funcs, string args, string argscb, string argsrb)
func (_Broker *BrokerFilterer) FilterThrowEvent(opts *bind.FilterOpts) (*BrokerThrowEventIterator, error) {

	logs, sub, err := _Broker.contract.FilterLogs(opts, "throwEvent")
	if err != nil {
		return nil, err
	}
	return &BrokerThrowEventIterator{contract: _Broker.contract, event: "throwEvent", logs: logs, sub: sub}, nil
}

// WatchThrowEvent is a free log subscription operation binding the contract event 0x622685c5770aa3feb985fe18cd9788e4a3fe85aacaed75bbc57214fb18c8e598.
//
// Solidity: event throwEvent(uint64 index, string dstFullID, string srcFullID, string funcs, string args, string argscb, string argsrb)
func (_Broker *BrokerFilterer) WatchThrowEvent(opts *bind.WatchOpts, sink chan<- *BrokerThrowEvent) (event.Subscription, error) {

	logs, sub, err := _Broker.contract.WatchLogs(opts, "throwEvent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BrokerThrowEvent)
				if err := _Broker.contract.UnpackLog(event, "throwEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseThrowEvent is a log parse operation binding the contract event 0x622685c5770aa3feb985fe18cd9788e4a3fe85aacaed75bbc57214fb18c8e598.
//
// Solidity: event throwEvent(uint64 index, string dstFullID, string srcFullID, string funcs, string args, string argscb, string argsrb)
func (_Broker *BrokerFilterer) ParseThrowEvent(log types.Log) (*BrokerThrowEvent, error) {
	event := new(BrokerThrowEvent)
	if err := _Broker.contract.UnpackLog(event, "throwEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
